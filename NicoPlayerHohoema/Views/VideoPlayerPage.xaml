<Page
    x:Class="NicoPlayerHohoema.Views.VideoPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:comment="using:NicoPlayerHohoema.Views.CommentRenderer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:toolkitext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:videoInfo="using:NicoPlayerHohoema.Views.VideoInfoContent"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    d:DesignHeight="480"
    d:DesignWidth="720"
    >

    <Page.Resources>
        <DataTemplate x:Key="SummaryVideoInfoContentTemplate" >
            <videoInfo:SummaryVideoInfoContent Width="400"
                                               />
        </DataTemplate>




        <local:VideoInfoContentTemplateSelector x:Key="VideoInfoContentTemplateSelector"
                                                Summary="{StaticResource SummaryVideoInfoContentTemplate}"
                                                
                                                >

        </local:VideoInfoContentTemplateSelector>
    </Page.Resources>




    <toolkit:DockPanel>
        
        <VisualStateManager.VisualStateGroups>

            

            <!-- 再生・一時停止ボタン -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayButton.Visibility" Value="Collapsed" />
                        <Setter Target="PauseButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayButton.Visibility" Value="Visible" />
                        <Setter Target="PauseButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            <!-- リピートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsEnableRepeat.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RepeatButton.Icon" Value="RepeatAll" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsEnableRepeat.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RepeatButton.Icon" Value="RepeatOne" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- ミュートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteButton.Icon" Value="Mute" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteButton.Icon" Value="Volume" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <SplitView x:Name="SplitView" PanePlacement="Right" PaneBackground="#77FFFFFF"
                   OpenPaneLength="400"
                   >
            <SplitView.Content>

                <!-- Media Control -->
                <Grid Background="Black" x:Name="MediaControl">

                    <MediaElement x:Name="mediaElem"
                          local:MediaElementExtention.CustomStream="{Binding VideoStream.Value}"
                          Position="{Binding CurrentVideoPosition.Value}"
                          AudioCategory="BackgroundCapableMedia"
                          IsMuted="{Binding IsMuted.Value}"
                          IsLooping="{Binding IsEnableRepeat.Value}"
                          Volume="{Binding SoundVolume.Value}"
                          
                      >
                        <i:Interaction.Behaviors>


                            <!-- 動画の再生位置を取り出す -->
                            <mybehavior:MediaElementExtractPositionBehavior 
                                Position="{Binding ReadVideoPosition.Value, Mode=TwoWay}"
                                Interval="00:00:00.128" 
                                />  

                            <!-- シーク操作後、自動で再生する -->
                            <mybehavior:MediaElementSeekAfterAutoPlayBehavior />

                            <!-- MediaElementのバッファリング/再生の状態を読み取る -->
                            <mybehavior:MediaElementStateGetter State="{Binding CurrentState.Value, Mode=TwoWay}" />

                        </i:Interaction.Behaviors>
                    </MediaElement>


                    <comment:CommentRenderer Comments="{Binding Comments}"
                                     VideoPosition="{Binding ReadVideoPosition.Value}"                                     
                                     Visibility="{Binding IsVisibleComment.Value, Converter={StaticResource BooleanToVisibility}}"
                                     />


                    <toolkit:DockPanel HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                               x:Name="ControlUIRoot"
                           >
                        <i:Interaction.Behaviors>
                            <mybehavior:AutoHide x:Name="AutoHideBehavior"
                                         IsEnable="{Binding IsAutoHideEnable.Value}"
                                         Delay="00:00:02" 
                                         WithCursor="False"
                                         >
                                <i:Interaction.Behaviors>


                                    <core:EventTriggerBehavior SourceObject="{Binding ElementName=MediaControl}" EventName="Tapped">
                                        <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior SourceObject="{Binding ElementName=MediaControl}" EventName="PointerMoved">
                                        <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                                    </core:EventTriggerBehavior>

                                </i:Interaction.Behaviors>
                            </mybehavior:AutoHide>
                        </i:Interaction.Behaviors>


                        <!-- トップバー -->
                        <toolkit:DockPanel toolkit:DockPanel.Dock="Top"
                                   Background="#AA777777"
                                           Height="48"
                                   >
                            <StackPanel toolkit:DockPanel.Dock="Left" 
                                Orientation="Horizontal"
                                >
                                <AppBarButton Icon="Back" 
                                      Command="{Binding BackCommand}"
                                      />
                                <TextBlock Text="{Binding Title.Value}" 
                                   VerticalAlignment="Center"
                                   Margin="8 0"
                                   Foreground="White"
                                   />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" toolkit:DockPanel.Dock="Right">

                                <TextBlock Text="{Binding CurrentVideoQuality}" 
                                           VerticalAlignment="Center"
                                           Foreground="Black"
                                           />

                                <AppBarButton Icon="Refresh" Content="{Binding ToggleQualityText}"
                                              Command="{Binding TogglePlayQualityCommand}"
                                              />
                                
                                <AppBarToggleButton Icon="Download" Content="キャッシュを保存"
                                              IsChecked="{Binding IsSaveRequestedCurrentQualityCache.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="{Binding CanToggleCurrentQualityCacheState.Value}"
                                              />

                                <AppBarButton Icon="OpenPane" Content="動画情報"
                                              
                                              >
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=SplitView}" PropertyName="IsPaneOpen" Value="True" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>

                                </AppBarButton>
                            </StackPanel>


                            <Border />

                        </toolkit:DockPanel>

                        
                        
                        
                        
                        <!-- Bottom Media Control -->
                        
                        
                        
                        <toolkit:DockPanel toolkit:DockPanel.Dock="Bottom"
                               Background="#AA777777"
                               >

                            <toolkit:DockPanel toolkit:DockPanel.Dock="Top">
                                <!-- -->
                                <Grid 
                                    x:Name="ControlPanel_Center"
                                    Margin="0 0"
                                    toolkit:DockPanel.Dock="Top"
                                    
                                     >

                                    <Slider Minimum="0.0" 
                                            Maximum="{Binding VideoLength.Value}"
                                            Value="{Binding SliderVideoPosition.Value, Mode=TwoWay}"
                                            StepFrequency="0.1"
                                            IsThumbToolTipEnabled="True"
                                            ThumbToolTipValueConverter="{StaticResource TimeToMovieLengthConverter}"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            Margin="16 0"
                                     >
                                    </Slider>

                                    <TextBlock HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               IsHitTestVisible="False"
                                               Foreground="Gray"
                                            >
                                        <Run Text="{Binding SliderVideoPosition.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                        <Run Text="/" />
                                        <Run Text="{Binding VideoLength.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                    </TextBlock>
                                </Grid>

                            </toolkit:DockPanel>
                            
                            
                            
                            
                            
                            <!-- ビデオコントロール  -->
                            
                            
                            
                            <toolkit:DockPanel toolkit:DockPanel.Dock="Top" Height="48">
                                <!-- Left Items -->
                                <StackPanel Orientation="Horizontal" toolkit:DockPanel.Dock="Left">

                                    <AppBarButton x:Name="PlayButton"
                                            Icon="Play"
                                        >
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:CallMethodAction TargetObject="{Binding ElementName=mediaElem}"
                                                       MethodName="Play"
                                                       />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </AppBarButton>
                                    <AppBarButton 
                                            x:Name="PauseButton"
                                            Icon="Pause"
                                            Visibility="Collapsed"
                                          >
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:CallMethodAction TargetObject="{Binding ElementName=mediaElem}"
                                                       MethodName="Pause"
                                                       />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </AppBarButton>

                                    <AppBarButton x:Name="RepeatButton"
                                            Icon="RepeatAll" 
                                            Command="{Binding ToggleRepeatCommand}"                                      
                                      />
                                </StackPanel>

                                <!-- Right Items-->
                                <toolkit:DockPanel
                                    toolkit:DockPanel.Dock="Right"
                                    LastChildFill="True"
                                    Width="300"
                                    >
                                    <AppBarButton x:Name="MuteButton"
                                            Icon="Mute" 
                                            Command="{Binding ToggleMuteCommand}"                                      
                                            toolkit:DockPanel.Dock="Left"
                                      />

                                    <Slider x:Name="VolumeSlider"
                                            VerticalAlignment="Center"
                                            Margin="16 0"                            
                                            Value="{Binding SoundVolume.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            IsThumbToolTipEnabled="True"
                                            ThumbToolTipValueConverter="{StaticResource ToUserFriendlySoubleVolume}"
                                            Maximum="1.0"
                                            Minimum="0.0"
                                            StepFrequency="0.01"
                                    />

                                </toolkit:DockPanel>

                                <Border />


                            </toolkit:DockPanel>

                            
                            
                            
                            <!-- Comment関連 -->
                            
                            
                            <toolkit:DockPanel Height="48">


                                <StackPanel toolkit:DockPanel.Dock="Right" Orientation="Horizontal">

                                    <AppBarToggleButton IsChecked="{Binding IsVisibleComment.Value, Mode=TwoWay}" 
                                                Icon="Comment" 
                                            />
                                </StackPanel>

                                <toolkit:DockPanel>
                                    <Button Content="投稿"  Margin="16 0" 
                                    Width="80" Height="40"
                                    Command="{Binding CommentSubmitCommand}"
                                    toolkit:DockPanel.Dock="Right"
                                    />

                                    <Button Content="184" ToolTipService.ToolTip="コマンドを選ぶ" 
                                toolkit:DockPanel.Dock="Left"
                                    Margin="16 0"
                                />

                                    <TextBox Text="{Binding WritingComment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 />


                                </toolkit:DockPanel>


                            </toolkit:DockPanel>



                        </toolkit:DockPanel>



                        <Border />


                    </toolkit:DockPanel>
                </Grid>
            </SplitView.Content>
            <SplitView.Pane>
                <toolkit:DockPanel>
                    
                    <!-- サブコンテンツのセレクタ -->
                    <ListView toolkit:DockPanel.Dock="Top"
                              ItemsSource="{Binding Types}"
                              SelectionMode="Single"
                              SelectedItem="{Binding SelectedSidePaneType.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                    <ScrollViewer>
                        <ContentControl Content="{Binding SidePaneContent.Value}"
                                    ContentTemplateSelector="{StaticResource VideoInfoContentTemplateSelector}"
                                    />
                    </ScrollViewer>

                    

                </toolkit:DockPanel>

            </SplitView.Pane>
        </SplitView>
        
    </toolkit:DockPanel>
    
    
</Page>
