<Page
    x:Name="PageRoot"
    x:Class="NicoPlayerHohoema.Views.VideoPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:comment="using:NicoPlayerHohoema.Views.CommentRenderer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:toolkitext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:videoInfo="using:NicoPlayerHohoema.Views.VideoInfoContent"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    d:DesignHeight="480"
    d:DesignWidth="720"
    
    >

    <Page.Resources>
        <DataTemplate x:Key="SummaryVideoInfoContentTemplate" >
            <videoInfo:SummaryVideoInfoContent Width="400"
                                               />
        </DataTemplate>

        <DataTemplate x:Key="MylistVideoInfoContentTemplate" >
            <videoInfo:MylistVideoInfoContent Width="400"
                                               />
        </DataTemplate>

        <DataTemplate x:Key="CommentVideoInfoContentTemplate" >
            <videoInfo:CommentVideoInfoContent 
                                               />
        </DataTemplate>
        <DataTemplate x:Key="SettingsVideoInfoContentTemplate" >
            <videoInfo:SettingsVideoInfoContent
                                               />
        </DataTemplate>



        <local:VideoInfoContentTemplateSelector x:Key="VideoInfoContentTemplateSelector"
                                                Summary="{StaticResource SummaryVideoInfoContentTemplate}"
                                                Mylist="{StaticResource MylistVideoInfoContentTemplate}"
                                                Comment="{StaticResource CommentVideoInfoContentTemplate}"
                                                Settings="{StaticResource SettingsVideoInfoContentTemplate}"
                                                
                                                >

        </local:VideoInfoContentTemplateSelector>
    </Page.Resources>




    <toolkit:DockPanel>

        <VisualStateManager.VisualStateGroups>

            <!-- 画面サイズごとの表示・非表示に切り替え -->
            <VisualStateGroup>
                <!-- 一番幅が広いとき -->
                <!--
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="721" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                -->
                <!-- 中ぐらい -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="521" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteToggleButton.Visibility" Value="Visible" />

                        <Setter Target="TopBarControlButtons_Wide.Visibility" Value="Visible" />
                        <Setter Target="TopBarControlButtons_Short.Visibility" Value="Collapsed" />


                        <Setter Target="CommentButtons_Short.Visibility" Value="Collapsed" />
                        <Setter Target="CommentSubmitButton_Wide.Visibility" Value="Visible" />
                        <Setter Target="CommentCommandEditButton_Wide.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <!-- 超狭い -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteToggleButton.Visibility" Value="Collapsed" />

                        <Setter Target="TopBarControlButtons_Wide.Visibility" Value="Collapsed" />
                        <Setter Target="TopBarControlButtons_Short.Visibility" Value="Visible" />


                        <Setter Target="CommentButtons_Short.Visibility" Value="Visible" />
                        <Setter Target="CommentSubmitButton_Wide.Visibility" Value="Collapsed" />
                        <Setter Target="CommentCommandEditButton_Wide.Visibility" Value="Collapsed" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            

            <!-- リピートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsEnableRepeat.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RepeatButton.Icon" Value="RepeatAll" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsEnableRepeat.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RepeatButton.Icon" Value="RepeatOne" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- ミュートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteToggleButton.Icon" Value="Mute" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteToggleButton.Icon" Value="Volume" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            
        </VisualStateManager.VisualStateGroups>


        <SplitView x:Name="SplitView" PanePlacement="Right" PaneBackground="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                   OpenPaneLength="400"
                   >
            <SplitView.Content>

                <!-- Media Control -->
                <Grid Background="#FF0C0C0C" x:Name="MediaControl">

                    <i:Interaction.Behaviors>
                        <mybehavior:KeyboardTrigger Key="Enter" IsEnabled="{Binding NowCommentWriting.Value, Converter={StaticResource InvertBoolean}}">
                            <mybehavior:KeyboardTrigger.Actions>
                                <mybehavior:SetFocus TargetObject="{Binding ElementName=CommentTextBox}" />
                            </mybehavior:KeyboardTrigger.Actions>
                        </mybehavior:KeyboardTrigger>

                        <mybehavior:MouseWheelTrigger>
                            <mybehavior:MouseWheelTrigger.UpActions>
                                <core:InvokeCommandAction Command="{Binding VolumeUpCommand}" />
                                <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                            </mybehavior:MouseWheelTrigger.UpActions>
                            <mybehavior:MouseWheelTrigger.DownActions>
                                <core:InvokeCommandAction Command="{Binding VolumeDownCommand}" />
                                <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                            </mybehavior:MouseWheelTrigger.DownActions>
                        </mybehavior:MouseWheelTrigger>

                    </i:Interaction.Behaviors>





                    <MediaElement x:Name="mediaElem"
                                local:MediaElementExtention.CustomStream="{Binding VideoStream.Value}"
                                Position="{Binding CurrentVideoPosition.Value}"
                                AudioCategory="BackgroundCapableMedia"
                                IsMuted="{Binding IsMuted.Value}"
                                IsLooping="{Binding IsEnableRepeat.Value}"
                                Volume="{Binding SoundVolume.Value}"
                                AutoPlay="True"
                            >
                        <i:Interaction.Behaviors>

                            <!-- 動画の再生位置を取り出す -->
                            <mybehavior:MediaElementExtractPositionBehavior 
                                    Position="{Binding ReadVideoPosition.Value, Mode=TwoWay}"
                                    Interval="00:00:00.008" 
                                    />

                            <!-- MediaElementのバッファリング/再生の状態を読み取る -->
                            <mybehavior:MediaElementStateGetter State="{Binding CurrentState.Value, Mode=TwoWay}" />


                            <mybehavior:EnsureLifecycleMediaElement />

                            <mybehavior:MediaElementContentHeightGetter ContentHeight="{Binding CommentCanvasHeight.Value, Mode=TwoWay}"
                                                                        />

                        </i:Interaction.Behaviors>
                    </MediaElement>


                    <comment:CommentRenderer 
                                x:Name="CommentRederer"
                                Comments="{Binding Comments}"
                                VideoPosition="{Binding ReadVideoPosition.Value}"                                     
                                Visibility="{Binding IsVisibleComment.Value, Converter={StaticResource BooleanToVisibility}}"
                                RequestFPS="{Binding RequestFPS.Value}"
                                CommentSizeScale="{Binding CommentFontScale.Value}"
                                Height="{Binding CommentCanvasHeight.Value}"
                                />


                   



                    <ProgressRing Visibility="{Binding NowBuffering.Value, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}"
                                  IsActive="{Binding NowBuffering.Value, Mode=OneWay}"
                                  Width="48"
                                  Height="48"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Margin="24 88"      
                                  />

                    <!-- playback toggle screen -->
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          Visibility="{Binding ElementName=ControlUIRoot, Path=Visibility}"
                          >
                        <Border Background="Transparent" IsHitTestVisible="True">
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <mybehavior:MediaElementTogglePlayback TargetObject="{Binding ElementName=mediaElem}"  />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>

                            <Grid Margin="0 0 0 48" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>

                                    <RowDefinition Height="3*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="3*"/>

                                </Grid.RowDefinitions>

                                <Border Grid.Row="1" Grid.Column="1"
                                    Visibility="{Binding NowPlaying.Value, Converter={StaticResource BooleanToVisibility}}" 
                                    >
                                    <Viewbox>
                                        <Canvas Width="24" Height="24">

                                            <Ellipse Width="24" Height="24" Fill="#AA000000"
                                                     />
                                            <Path Data="M8,5.14V19.14L19,12.14L8,5.14Z" Fill="WhiteSmoke" />
                                        </Canvas>
                                    </Viewbox>
                                </Border>

                                <Border Grid.Row="1" Grid.Column="1"
                                    Visibility="{Binding NowPlaying.Value, Converter={StaticResource BooleanToVisibilityInverted}}" 
                                    >
                                    <Viewbox>
                                        <Canvas Width="24" Height="24">
                                            <Ellipse Width="24" Height="24" Fill="#AA000000"
                                                     />
                                            <Path Data="M14,19H18V5H14M6,19H10V5H6V19Z" Fill="WhiteSmoke" />
                                        </Canvas>
                                    </Viewbox>

                                </Border>

                            </Grid>


                        </Border>
                    </Grid>

                    

                    <toolkit:DockPanel HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                               x:Name="ControlUIRoot"
                           >
                        <i:Interaction.Behaviors>
                            <mybehavior:AutoHide x:Name="AutoHideBehavior"
                                         IsEnable="{Binding IsAutoHideEnable.Value}"
                                         Delay="00:00:02" 
                                         WithCursor="False"
                                         >
                                <i:Interaction.Behaviors>


                                    <core:EventTriggerBehavior SourceObject="{Binding ElementName=MediaControl}" EventName="Tapped">
                                        <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior SourceObject="{Binding ElementName=MediaControl}" EventName="PointerMoved">
                                        <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                                    </core:EventTriggerBehavior>




                                </i:Interaction.Behaviors>
                            </mybehavior:AutoHide>


                        </i:Interaction.Behaviors>

                        

                        <!-- トップバー -->
                        <toolkit:DockPanel toolkit:DockPanel.Dock="Top"
                                          
                                   >

                            <StackPanel x:Name="TopBarControlButtons_Short"
                                        toolkit:DockPanel.Dock="Bottom"
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal"
                                        Height="66"
                                   Background="#AA777777"
                                        Margin="0 8 0 0"
                                            >
                                <Button 
                                           Command="{Binding TogglePlayQualityCommand}"
                                           VerticalAlignment="Stretch"
                                           Padding="8 0 8 0"
                                           
                                           >
                                    <StackPanel>
                                        <TextBlock Text="{Binding CurrentVideoQuality.Value}"
                                                   FontSize="20"
                                                   FontWeight="SemiBold"
                                                   TextAlignment="Center"
                                                   >

                                        </TextBlock>
                                        <TextBlock Text="変更"
                                                   FontSize="12"
                                                   Margin="0 0 0 0"
                                                   Width="48"
                                                   TextWrapping="Wrap"
                                                   TextAlignment="Center"
                                                   />
                                    </StackPanel>
                                </Button>

                                <AppBarToggleButton Icon="Download" Label="保存"
                                                    IsChecked="{Binding IsSaveRequestedCurrentQualityCache.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="{Binding CanToggleCurrentQualityCacheState.Value}"
                                                    VerticalAlignment="Stretch"
                                                    Visibility="{Binding CanDownload, Converter={StaticResource BooleanToVisibility}}"
                                              />

                                <AppBarToggleButton IsChecked="{Binding IsVisibleComment.Value, Mode=TwoWay}" 
                                                    Icon="Comment" 
                                                    Label="コメント表示"
                                                    VerticalAlignment="Stretch"
                                            />
                                <AppBarToggleButton IsChecked="{Binding IsFullScreen.Value, Mode=TwoWay}" 
                                                    Icon="FullScreen" 
                                                    Label="全画面表示"
                                                    VerticalAlignment="Stretch"
                                            />


                                <AppBarButton Icon="Add" 
                                              Label="マイリスト登録"
                                              VerticalAlignment="Stretch"
                                            >
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding SelectedSidePaneType}" PropertyName="Value" Value="Mylist" />
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=SplitView}" PropertyName="IsPaneOpen" Value="True" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </AppBarButton>

                            </StackPanel>

                            <StackPanel Orientation="Horizontal" toolkit:DockPanel.Dock="Right"
                                         Height="66"
                                   Background="#AA777777"
                                        >

                                <StackPanel Orientation="Horizontal"
                                            x:Name="TopBarControlButtons_Wide"
                                            >
                                    <Button 
                                           Command="{Binding TogglePlayQualityCommand}"
                                           VerticalAlignment="Stretch"
                                           Padding="8 0 8 0"
                                           
                                           >
                                        <StackPanel>
                                            <TextBlock Text="{Binding CurrentVideoQuality.Value}"
                                                   FontSize="20"
                                                   FontWeight="SemiBold"
                                                   TextAlignment="Center"
                                                   >

                                            </TextBlock>
                                            <TextBlock Text="変更"
                                                   FontSize="12"
                                                   Margin="0 0 0 0"
                                                   Width="48"
                                                   TextWrapping="Wrap"
                                                   TextAlignment="Center"
                                                   />
                                        </StackPanel>
                                    </Button>

                                    <AppBarToggleButton Icon="Download" Label="保存"
                                                    IsChecked="{Binding IsSaveRequestedCurrentQualityCache.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="{Binding CanToggleCurrentQualityCacheState.Value}"
                                                    VerticalAlignment="Stretch"
                                                    Visibility="{Binding CanDownload, Converter={StaticResource BooleanToVisibility}}"
                                              />

                                    <AppBarToggleButton IsChecked="{Binding IsVisibleComment.Value, Mode=TwoWay}" 
                                                        Icon="Comment" 
                                                        Label="コメント表示"
                                                        VerticalAlignment="Stretch"
                                            />

                                    <AppBarToggleButton IsChecked="{Binding IsFullScreen.Value, Mode=TwoWay}" 
                                                        Icon="FullScreen" 
                                                        Label="全画面表示"
                                                        VerticalAlignment="Stretch"
                                            />

                                    <AppBarButton Icon="Add" 
                                              Label="マイリスト登録"
                                              VerticalAlignment="Stretch"
                                              x:Name="AddToMylistButton"
                                            >
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Tapped">
                                                <core:ChangePropertyAction TargetObject="{Binding SelectedSidePaneType}" PropertyName="Value" Value="Mylist" />
                                                <core:ChangePropertyAction TargetObject="{Binding ElementName=SplitView}" PropertyName="IsPaneOpen" Value="True" />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </AppBarButton>
                                    
                                </StackPanel>
                                

                                

                                <AppBarButton Icon="OpenPane" Label="情報表示"
                                              VerticalAlignment="Stretch"
                                              >
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:ChangePropertyAction TargetObject="{Binding SelectedSidePaneType}" PropertyName="Value" Value="Summary" />
                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=SplitView}" PropertyName="IsPaneOpen" Value="True" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>

                                </AppBarButton>
                            </StackPanel>


                            

                            <StackPanel 
                                Orientation="Horizontal"
                                   Background="#AA777777"
                                >
                                <AppBarButton Icon="Back" 
                                              Label="戻る"
                                              Command="{Binding BackCommand}"
                                              VerticalAlignment="Stretch"
                                      />
                                <TextBlock Text="{Binding Title.Value}" 
                                           VerticalAlignment="Center"
                                           Margin="8 0"
                                           Foreground="Black"
                                           TextWrapping="Wrap"
                                           
                                   />
                            </StackPanel>


                        </toolkit:DockPanel>





                        <!-- Bottom Media Control -->



                        <toolkit:DockPanel toolkit:DockPanel.Dock="Bottom"
                               
                               >


                            <!-- ビデオコントロール  -->



                            <toolkit:DockPanel toolkit:DockPanel.Dock="Top" 
                                               Margin="0 0 0 16"

                                               >
                                <!-- Left Items -->
                                <toolkit:DockPanel
                                            toolkit:DockPanel.Dock="Left"
                                            Margin="16 0 0 0"
                                            Height="66"
                                            >
                                    <StackPanel Background="#AA777777"
                                                toolkit:DockPanel.Dock="Left"
                                                >
                                        <AppBarButton x:Name="RepeatButton"
                                              Icon="RepeatAll" 
                                              Label="リピート"
                                              Command="{Binding ToggleRepeatCommand}"                                      
                                              VerticalAlignment="Stretch"
                                      />
                                    </StackPanel>
                                    

                                </toolkit:DockPanel>

                                <!-- Right Items-->
                                <toolkit:DockPanel
                                    toolkit:DockPanel.Dock="Right"
                                    Margin="0 0 16 0"
                                      Height="66"
                                    >

                                    <StackPanel Background="#AA777777"
                                                toolkit:DockPanel.Dock="Left"
                                                >
                                        <AppBarButton Icon="Volume" 
                                                      Label="ミュート"
                                                      VerticalAlignment="Stretch"
                                                      x:Name="MuteToggleButton"
                                                      Command="{Binding ToggleMuteCommand}"    
                                                  >

                                        </AppBarButton>
                                    </StackPanel>

                                    
                                    <StackPanel Background="#AA777777" Margin="8 0" 
                                                Orientation="Vertical">
                                        
                                        
                                        
                                        <Slider x:Name="VolumeSlider"
                                            Orientation="Horizontal"
                                            VerticalAlignment="Top"
                                            Margin="8 4"
                                            Value="{Binding SoundVolume.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            IsThumbToolTipEnabled="True"
                                            ThumbToolTipValueConverter="{StaticResource ToUserFriendlySoubleVolume}"
                                            Maximum="1.0"
                                            Minimum="0.0"
                                            StepFrequency="0.01"
                                            Height="32"
                                            Width="160"
                                                                
                                            />
                                        <TextBlock Text="音量" 
                                                   VerticalAlignment="Center"
                                                   Foreground="Black"
                                                   Margin="8 0 0 0"
                                                   HorizontalAlignment="Center"
                                                   FontSize="12"
                                                   />
                                        
                                    </StackPanel>
                                    

                                    
                                </toolkit:DockPanel>

                                <Border />


                            </toolkit:DockPanel>


                            <!-- シークバー -->
                            <toolkit:DockPanel toolkit:DockPanel.Dock="Top"
                                               Background="#AA777777"
                                               >
                                <Grid 
                                    x:Name="ControlPanel_Center"
                                    Margin="0 0"
                                    toolkit:DockPanel.Dock="Top"
                                    
                                     >

                                    <Grid Margin="24 0">
                                        
                                        <local:DownloadProgressBar 
                                            ProgressFragmentItems="{Binding ProgressFragments}"
                                            Margin="0 20 0 0"
                                            />
                                            
                                        
                                        <Slider Minimum="0.0" 
                                            Maximum="{Binding VideoLength.Value}"
                                            Value="{Binding SliderVideoPosition.Value, Mode=TwoWay}"
                                            StepFrequency="0.1"
                                            IsThumbToolTipEnabled="True"
                                            ThumbToolTipValueConverter="{StaticResource TimeToMovieLengthConverter}"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            IsEnabled="{Binding NowQualityChanging.Value, Converter={StaticResource InvertBoolean}}"
                                         >
                                        </Slider>
                                    </Grid>


                                    <Border HorizontalAlignment="Left"          
                                                VerticalAlignment="Bottom"
                                            Width="60"
                                            Margin="24 0 0 0"
                                            >
                                        <TextBlock  
                                                Foreground="DarkGray"
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Right"
                                                    >
                                            <Run Text="{Binding ProgressPercent.Value}" />
                                            <Run Text="%" />
                                        </TextBlock>

                                    </Border>


                                    <TextBlock  HorizontalAlignment="Right"
                                               VerticalAlignment="Bottom"
                                               IsHitTestVisible="False"
                                               Foreground="DarkGray"
                                               Margin="0 0 24 0"
                                            >
                                        
                                        <Run Text="{Binding SliderVideoPosition.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                        <Run Text="/" />
                                        <Run Text="{Binding VideoLength.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                                    </TextBlock>
                                </Grid>

                            </toolkit:DockPanel>



                            <!-- Comment関連 -->


                            <toolkit:DockPanel Background="#AA777777" x:Name="CommentLayoutRoot">

                                <Grid toolkit:DockPanel.Dock="Bottom" 
                                      x:Name="CommentButtons_Short"
                                      Margin="0 8"
                                      >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    
                                    <Button Content="{Binding CommandString.Value}" 
                                            Margin="16 0 8 0"
                                            Height="40"
                                            DataContext="{Binding}"
                                            HorizontalAlignment="Stretch"
                                        >
                                        <Button.Flyout>
                                            <Flyout>
                                                <local:CommentCommandEditer DataContext="{Binding CommandEditerVM}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <Button Content="投稿"  Margin="8 0 16 0" 
                                             Height="40"
                                            HorizontalAlignment="Stretch"
                                            Command="{Binding CommentSubmitCommand}"
                                            Grid.Column="1"
                                        />

                                </Grid>
                                
                                <toolkit:DockPanel Margin="8" MaxWidth="960">
                                    <Button Content="投稿"  Margin="16 0" 
                                        Width="80" Height="40"
                                        Command="{Binding CommentSubmitCommand}"
                                        x:Name="CommentSubmitButton_Wide"
                                            toolkit:DockPanel.Dock="Right"
                                        />

                                    <Button Content="{Binding CommandString.Value}" 
                                            toolkit:DockPanel.Dock="Left"
                                            Margin="16 0"
                                            MinWidth="120"
                                            MinHeight="32"
                                            DataContext="{Binding}"
                                            x:Name="CommentCommandEditButton_Wide"
                                        >
                                        <Button.Flyout>
                                            <Flyout>
                                                <local:CommentCommandEditer DataContext="{Binding CommandEditerVM}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <TextBox x:Name="CommentTextBox" 
                                             Text="{Binding WritingComment.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             FontSize="18"
                                             VerticalAlignment="Center"
                                             MaxLength="75"
                                             IsTabStop="True"
                                             toolkitext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                                             PlaceholderText="コメント"
                                             HorizontalAlignment="Stretch"
                                             >
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="GotFocus">
                                                <core:ChangePropertyAction TargetObject="{Binding NowCommentWriting}" PropertyName="Value" Value="True" />
                                                <mybehavior:MediaElementPauseAction TargetObject="{Binding ElementName=mediaElem}" 
                                                                                   IsEnabled="{Binding IsPauseWithCommentWriting.Value}" />
                                            </core:EventTriggerBehavior>
                                            <core:EventTriggerBehavior EventName="LostFocus" >
                                                <core:ChangePropertyAction TargetObject="{Binding NowCommentWriting}" PropertyName="Value" Value="False" />
                                                <mybehavior:MediaElementPlayAction TargetObject="{Binding ElementName=mediaElem}" 
                                                                                   IsEnabled="{Binding CanResumeOnExitWritingComment.Value}" />
                                            </core:EventTriggerBehavior>

                                            <mybehavior:KeyboardTrigger Key="Escape">
                                                <mybehavior:KeyboardTrigger.Actions>
                                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                                                </mybehavior:KeyboardTrigger.Actions>
                                            </mybehavior:KeyboardTrigger>

                                            <mybehavior:KeyboardTrigger Key="Enter">
                                                <mybehavior:KeyboardTrigger.Actions>
                                                    <core:InvokeCommandAction Command="{Binding CommentSubmitCommand}" />
                                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="False" />
                                                    <core:ChangePropertyAction TargetObject="{Binding ElementName=CommentTextBox}" PropertyName="IsEnabled" Value="True" />
                                                </mybehavior:KeyboardTrigger.Actions>
                                            </mybehavior:KeyboardTrigger>

                                        </i:Interaction.Behaviors>
                                    </TextBox>




                                </toolkit:DockPanel>


                            </toolkit:DockPanel>




                        </toolkit:DockPanel>



                        <Border >

                        </Border>


                    </toolkit:DockPanel>

                    <!-- タップバリア
                         コメントテキストを書いたあとに画面のどこかをタップしたら
                         ロストフォーカスさせるためのやつ -->
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0 0 0 56" 
                          Background="Transparent"
                          IsHitTestVisible="True"
                          Visibility="{Binding NowCommentWriting.Value, Converter={StaticResource BooleanToVisibility}}"
                          >

                    </Grid>



                    <!-- サポートされていないプロトコル・動画形式 -->
                    <Border HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Margin="24 88"
                          Visibility="{Binding IsNotSupportVideoType, Converter={StaticResource BooleanToVisibility}}"
                          Background="WhiteSmoke"
                                Padding="16"
                          >

                        <StackPanel Orientation="Horizontal">

                            <SymbolIcon Symbol="Important"
                                        Foreground="Black"                                         
                                        Margin="8 8 16 8"
                                        />

                            <StackPanel>
                                <TextBlock Text="この動画は再生できません"
                                   VerticalAlignment="Center"    
                                           FontSize="18"
                                           Margin="0 0 0 8"
                                        Foreground="Black"                                         
                                   />

                                <TextBlock VerticalAlignment="Center"
                                        Foreground="Black"                                         
                                   >
                                    <Run Text="{Binding CannotPlayReason}" />
                                </TextBlock>

                                <HyperlinkButton Content="ブラウザで動画を見る"
                                                 Command="{Binding OpenVideoPageWithBrowser}"
                                                 >
                                </HyperlinkButton>

                            </StackPanel>
                        </StackPanel>
                    </Border>

                </Grid>
            </SplitView.Content>
            <SplitView.Pane>
                <toolkit:DockPanel>

                    <!-- サブコンテンツのセレクタ -->
                    <ListView toolkit:DockPanel.Dock="Top"
                              ItemsSource="{Binding Types}"
                              SelectionMode="Single"
                              SelectedItem="{Binding SelectedSidePaneType.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>

                    <ScrollViewer>
                        <ContentControl Content="{Binding SidePaneContent.Value}"
                                    ContentTemplateSelector="{StaticResource VideoInfoContentTemplateSelector}"
                                    />
                    </ScrollViewer>



                </toolkit:DockPanel>

            </SplitView.Pane>
        </SplitView>

    </toolkit:DockPanel>


</Page>
