<Page
    x:Name="PageRoot"
    x:Class="NicoPlayerHohoema.Views.MylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:view="using:NicoPlayerHohoema.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:mytrigger="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:hardtrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtension="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:NicoPlayerHohoema.Views.Actions"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    >
    <Grid>
        <VisualStateManager.VisualStateGroups>

            <!-- トップバー表示時のタイトル位置ずらし -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsForceTVModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ItemsList.Padding" Value="48 0 48 27" />
                        <Setter Target="ScrollHeader.Mode" Value="None" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource DesktopWindowWidthBreakPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ScrollHeader.Mode" Value="QuickReturn" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            <VisualStateGroup>
                
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding CanEditMylist, Converter={StaticResource BoolNegation}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="LoginUser" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EditMylistButton.Visibility" Value="Visible" />
                        <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />
                        <Setter Target="MylistDeleteButtonSeparator.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="Local" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EditMylistButton.Visibility" Value="Visible" />
                        <Setter Target="DeleteMylistButton.Visibility" Value="Visible" />
                        <Setter Target="MylistDeleteButtonSeparator.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsLoggedIn, Converter={StaticResource BoolNegation}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>

                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="OtherUser" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ToggleMylistFavoriteButton.Visibility" Value="Visible" />

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
            
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="OtherUser" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FeedRegstrationButton.Visibility" Value="Visible" />

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>


            <!-- コマンドバーに表示する内容をコントロールする -->
            <!-- マイリストされたアイテムを解除する操作はマイリスト編集可能かつ選択中のみ -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Condition="OtherUser" Value="{Binding MylistOrigin.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RemoveMylistSelectedItemButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BoolNegation}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RemoveMylistSelectedItemButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>

            <!-- コマンドバーに表示する内容をコントロールする -->
            <!-- 選択中 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSelectionModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AddMylistSelectedItemButton.Visibility" Value="Visible" />
                        <Setter Target="CacheRequestSelectedItemButton.Visibility" Value="Visible" />

                        <Setter Target="TitleLayout.Visibility" Value="Collapsed" />
                        <Setter Target="ScrollToTopButton.Visibility" Value="Collapsed" />
                        <Setter Target="PlayAllButton.Visibility" Value="Collapsed" />
                        <Setter Target="RefreshButton.Visibility" Value="Collapsed" />

                        <Setter Target="ItemsList.SelectionMode" Value="Multiple" />
                        <Setter Target="ItemsList.IsItemClickEnabled" Value="False" />
                        <Setter Target="ItemsList.IsMultiSelectCheckBoxEnabled" Value="True" />

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        

        <uwpcontrols:PullToRefreshListView 
            x:Name="ItemsList"
            ItemsSource="{Binding IncrementalLoadingItems, Mode=OneWay}"
            RefreshCommand="{Binding RefreshCommand}"
            IsItemClickEnabled="True"
            IncrementalLoadingTrigger="Edge"
            PullThreshold="85"    
            UseSystemFocusVisuals="True"
            SelectionMode="None"
            HorizontalContentAlignment="Stretch"
            uwpExtension:ListViewBase.Command="{StaticResource OpenContentCommand}"
            ItemContainerStyle="{StaticResource VideoListViewItemStyle}"
            uwpExtension:ScrollViewerEx.VerticalScrollBarMargin="0 48 0 0"
            
            xmlns:myExtensions="using:NicoPlayerHohoema.Views.Extensions"
            myExtensions:ListViewBase.ItemContextFlyoutTemplate="{StaticResource VideoListItemFlyoutTemplate}"

                            >
            <i:Interaction.Behaviors>

                <mybehavior:ListViewSelectedItemsGetter SelectedItems="{Binding SelectedItems, Mode=TwoWay}" />

                <mybehavior:KeyboardTrigger Key="F5">
                    <mybehavior:KeyboardTrigger.Actions>
                        <core:InvokeCommandAction Command="{Binding  RefreshCommand}" />
                    </mybehavior:KeyboardTrigger.Actions>
                </mybehavior:KeyboardTrigger>

                <mybehavior:ListViewVerticalOffsetGetter VerticalOffset="{Binding ListPosition, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
            <ListView.Header>


                <Grid>

                    <uwpcontrols:ScrollHeader
                x:Name="ScrollHeader"
                Mode="Sticky" >

                        <StackPanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                            <CommandBar x:Name="VideoListCommandBar" Background="Transparent" >

                                <CommandBar.Content>
                                    <StackPanel 
                                Margin="16 0 0 0"
                            x:Name="TitleLayout"
                                >

                                        <StackPanel Orientation="Horizontal" 
                                        Margin="0 0 0 0"
                                        Visibility="{Binding UserName, Converter={StaticResource NotNullToVisibility}}"
                                        >

                                            <TextBlock FontSize="14">
                                    <Run Text="{Binding UserName}" /> の <Run Text="{Binding MylistState}" />
                                            </TextBlock>

                                            <Border Visibility="{Binding IsLoginUserDeflist, Converter={StaticResource BooleanToVisibility}}"
                                        Margin="8 0 0 0"
                                        >
                                                <TextBlock>
                                (登録:<Run Text="{Binding DeflistRegistrationCount}" /> 上限:<Run Text="{Binding DeflistRegistrationCapacity}" />)
                                                </TextBlock>

                                            </Border>
                                            <Border Visibility="{Binding IsLoginUserMylistWithoutDeflist, Converter={StaticResource BooleanToVisibility}}"
                                        Margin="8 0 0 0"
                                        >
                                                <TextBlock >
                                (登録:<Run Text="{Binding MaxItemsCount.Value}" /> 合計:<Run Text="{Binding MylistRegistrationCount}" /> 上限:<Run Text="{Binding MylistRegistrationCapacity}" />)
                                                </TextBlock>

                                            </Border>
                                        </StackPanel>
                                    </StackPanel>
                                </CommandBar.Content>

                                <CommandBar.PrimaryCommands>


                                    <!-- 非選択中 -->

                                    <AppBarButton x:Name="PlayAllButton"
                                        Label="全て再生"
                                        Icon="Play"
                                    >
                                        <AppBarButton.Flyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem Text="先頭から再生"
                                                        Command="{Binding PlayAllVideosFromHeadCommand}"
                                                        />
                                                <MenuFlyoutItem Text="最後尾から再生"
                                                        Command="{Binding PlayAllVideosFromTailCommand}"
                                                        />
                                            </MenuFlyout>
                                        </AppBarButton.Flyout>
                                    </AppBarButton>

                                    <AppBarButton x:Name="ScrollToTopButton"
                                            Label="トップへ戻る"
                                            Icon="Up"
                                        >
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Click">
                                                <actions:ScrollViewerVerticalPositionSettingsAction Target="{Binding ElementName=ItemsList}" VerticalOffset="0.0" />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </AppBarButton>

                                    <AppBarButton x:Name="RefreshButton"
                                        Command="{Binding RefreshCommand}"
                                        Label="更新"
                                        Icon="Refresh"
                                    />

                                    <!-- 選択中 -->
                                    <AppBarButton x:Name="AddMylistSelectedItemButton"
                            Command="{Binding RegistratioMylistCommand}"
                                            
                                        Icon="Add"
                                        Label="マイリストに追加"
                                        Visibility="Collapsed"
                                        >
                                    </AppBarButton>

                                    <AppBarButton x:Name="RemoveMylistSelectedItemButton"
                                        Command="{Binding UnregistrationMylistCommand}"
                                        Icon="Remove"
                                        Label="マイリスト解除"
                                          
                                        >
                                    </AppBarButton>

                                    <AppBarButton x:Name="CacheRequestSelectedItemButton"
                                    Command="{Binding RequestCacheDownload}"
                                        Background="Transparent"
                                        Icon="Download"
                                        Label="キャッシュ"
                                        Visibility="Collapsed"
                                        >
                                    </AppBarButton>

                                    <AppBarToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >

                                        <StackPanel  Orientation="Horizontal">
                                            <iconPack:PackIconMaterial Kind="CheckboxMarkedOutline" 
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    />
                                            <TextBlock Text="選択" VerticalAlignment="Center"
                                            Margin="8 0 0 0"
                                            Style="{StaticResource CaptionTextBlockStyle}"
                                            />

                                        </StackPanel>
                                    </AppBarToggleButton>






                                </CommandBar.PrimaryCommands>

                                <CommandBar.SecondaryCommands>

                                    <AppBarToggleButton x:Name="ToggleMylistFavoriteButton"
                                                IsChecked="{Binding IsFavoriteMylist.Value, Mode=TwoWay}"
                                                IsEnabled="{Binding CanChangeFavoriteMylistState.Value}"
                                                Visibility="Collapsed"
                                            Icon="Favorite"
                                            Label="フォロー"
                                            >

                                    </AppBarToggleButton>

                                    <AppBarButton 
                                x:Name="FeedRegstrationButton"
                                Visibility="Collapsed"
                                Label="購読に追加"
                                Icon="Add"
                                >
                                        <AppBarButton.Flyout>
                                            <MenuFlyout>
                                                <i:Interaction.Behaviors>
                                                    <mybehavior:MenuFlyoutItemsSetter ItemsSource="{Binding SubscriptionManager.Subscriptions}"
                                                                                CustomObjectToTag="{Binding PlayableList.Value}"
                                                                                >
                                                        <mybehavior:MenuFlyoutItemsSetter.ItemTemplate>
                                                            <DataTemplate>
                                                                <MenuFlyoutItem Text="{Binding Label}"
                                                                    Command="{Binding AddSource}"
                                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag, Converter={StaticResource SubscriptionSourceConverter}}"
                                                                    />
                                                            </DataTemplate>
                                                        </mybehavior:MenuFlyoutItemsSetter.ItemTemplate>
                                                    </mybehavior:MenuFlyoutItemsSetter>
                                                </i:Interaction.Behaviors>

                                                <MenuFlyoutItem Text="購読グループを作成..."
                                                                Command="{StaticResource CreateSubscriptionGroupCommand}"
                                                                CommandParameter="{Binding PlayableList.Value, Converter={StaticResource SubscriptionSourceConverter}}"
                                                                />


                                            </MenuFlyout>
                                        </AppBarButton.Flyout>
                                    </AppBarButton>

                                    <AppBarButton Command="{Binding OpenUserPageCommand}"
                            Background="Transparent"
                                x:Name="OpenUserPageButton"
                                Visibility="{Binding IsLocalMylist, Converter={StaticResource BooleanToVisibilityInverted}}"
                                        Icon="People"
                                        Label="オーナー情報"
                                    >
                                    </AppBarButton>

                                    <AppBarButton x:Name="EditMylistButton"
                                        Command="{Binding EditMylistGroupCommand}"
                                        Background="Transparent"
                                        Visibility="Collapsed"
                                        Icon="Edit"
                                        Label="マイリスト情報を編集"
                                        >
                                    </AppBarButton>

                                    <AppBarSeparator x:Name="MylistDeleteButtonSeparator"
                                            Visibility="Collapsed"
                                            />

                                    <AppBarButton x:Name="DeleteMylistButton"
                                        Command="{Binding DeleteMylistCommand}"
                                        Background="Transparent"
                                        Visibility="Collapsed"
                                        Icon="Delete"
                                        Label="マイリストを削除"
                                        >
                                    </AppBarButton>
                                </CommandBar.SecondaryCommands>
                            </CommandBar>
                        </StackPanel>
                    </uwpcontrols:ScrollHeader>


                </Grid>

                   
                
            </ListView.Header>


            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <local:VideoInfoControl />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>

            <uwpcontrols:PullToRefreshListView.RefreshIndicatorContent>
                <StackPanel  Margin="0 32 0 0" >
                    <Border Margin="0 16 0 0" BorderThickness="0 0 0 1" BorderBrush="Gray" />
                    <SymbolIcon Symbol="Refresh" VerticalAlignment="Bottom" Height="48" Width="48" Margin="0 24 0 8"
                            />
                </StackPanel>
            </uwpcontrols:PullToRefreshListView.RefreshIndicatorContent>
        </uwpcontrols:PullToRefreshListView>

    </Grid>
</Page>
