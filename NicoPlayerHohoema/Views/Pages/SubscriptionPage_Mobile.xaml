<Page
    x:Class="NicoPlayerHohoema.Views.SubscriptionPage_Mobile"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Mvvm"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpExtensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:actions="using:NicoPlayerHohoema.Views.Actions"
    xmlns:subscription="using:NicoPlayerHohoema.Models.Subscription"
    xmlns:templateselector="using:NicoPlayerHohoema.Views.TemplateSelector"
    xmlns:mytrigger="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:subscriptionControls="using:NicoPlayerHohoema.Views.Pages.Subscription"
    DataContext="{x:Null}"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid x:Name="RootLayout">

        <Grid x:Name="EmptySubscriptionsNoticeLayout" Margin="16" VerticalAlignment="Center" Visibility="Collapsed">
            <TextBlock Text="{Binding Source=SubscriptionsEmptyNotice, Converter={StaticResource ToLocalText}}" 
                       TextWrapping="Wrap"
                       Style="{StaticResource SubtitleTextBlockStyle}"
                       Opacity="0.7"
                       />
        </Grid>
        
        <Grid x:Name="OverView">
            <ListView ItemsSource="{Binding SubscriptionManager.Subscriptions, Mode=TwoWay}"
                  CanReorderItems="True"
                  AllowDrop="True"
                  SelectionMode="Single"
                  SelectedItem="{Binding SelectedSubscription.Value, Mode=TwoWay}"
                      
                  >

                <ListView.Header>
                    <uwpcontrols:ScrollHeader Mode="Sticky">
                        <CommandBar>
                            <AppBarButton Label="購読グループを追加" Icon="Add" AllowFocusOnInteraction="True">
                                <AppBarButton.Flyout>
                                    <Flyout>
                                        <StackPanel MinWidth="180">
                                            <TextBox x:Name="SubscriptionGroupNameTextBox"
                                                    Header="購読グループ名"
                                                InputScope="Text"
                                                    MinWidth="80"
                                            />
                                            <Border Height="8" />
                                            <Button Content="追加"
                                            HorizontalAlignment="Stretch"
                                                    Height="32"
                                            >
                                                <i:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="Click">
                                                        <core:InvokeCommandAction 
                                                        Command="{Binding SubscriptionManager.AddSubscription}"
                                                        CommandParameter="{Binding ElementName=SubscriptionGroupNameTextBox, Path=Text}"
                                                        />
                                                        <core:ChangePropertyAction TargetObject="{x:Bind SubscriptionGroupNameTextBox}" PropertyName="Text" Value="" />
                                                    </core:EventTriggerBehavior>

                                                    <mybehavior:KeyboardTrigger Key="Enter"
                                                                    OnlyWhenFocus="{x:Bind SubscriptionGroupNameTextBox}"
                                                                    IsEnabled="True"
                                                                    >
                                                        <core:InvokeCommandAction 
                                                        Command="{Binding SubscriptionManager.AddSubscription}"
                                                        CommandParameter="{Binding ElementName=SubscriptionGroupNameTextBox, Path=Text}"
                                                        />
                                                        <mybehavior:CloseFlyoutAction />
                                                        <core:ChangePropertyAction TargetObject="{x:Bind SubscriptionGroupNameTextBox}" PropertyName="Text" Value="" />
                                                    </mybehavior:KeyboardTrigger>
                                                </i:Interaction.Behaviors>

                                            </Button>
                                        </StackPanel>
                                    </Flyout>
                                </AppBarButton.Flyout>
                            </AppBarButton>
                            <AppBarButton Label="更新" Icon="Refresh" Command="{Binding WatchItLater.Refresh}" />
                            <AppBarButton Label="設定" Icon="Setting"
                                          >
                                <AppBarButton.Flyout>
                                    <MenuFlyout >
                                        <ToggleMenuFlyoutItem Text="自動更新" IsChecked="{Binding WatchItLater.IsAutoUpdateEnabled, Mode=TwoWay}" />
                                    </MenuFlyout>
                                </AppBarButton.Flyout>
                            </AppBarButton>
                                          

                        </CommandBar>
                    </uwpcontrols:ScrollHeader>
                </ListView.Header>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="16 8" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="subscription:Subscription">
                        <UserControl>
                            <Grid>
                                <toolkit:DockPanel>
                                    <StackPanel toolkit:DockPanel.Dock="Right"
                                                Orientation="Horizontal"
                                                >

                                        <Grid x:Name="UpdatingNoticeLayout" Visibility="Collapsed"
                                                    VerticalAlignment="Center"
                                              Margin="8 0"
                                                    >
                                            <uwpcontrols:RadialProgressBar 
                                                    x:Name="UpdatingProgressBar" 
                                                     IsIndeterminate="False"
                                                     Maximum="{Binding UpdateTargetCount}"
                                                     Value="{Binding UpdateCompletedCount}"
                                                    Height="32"
                                                    Width="32"
                                                    VerticalAlignment="Center"
                                                Visibility="Collapsed"
                                                     />

                                            <ProgressRing
                                                    x:Name="UpdatingProgressRing" 
                                                     IsActive="False"
                                                    Visibility="Collapsed"
                                                    Height="32"
                                                    Width="32"
                                                    VerticalAlignment="Center"
                                                     />
                                        </Grid>

                                        <iconPack:PackIconMaterial Kind="ArrowRight" Opacity="0.5"
                                                        VerticalAlignment="Center"
                                                       />
                                    </StackPanel>

                                    <ItemsControl toolkit:DockPanel.Dock="Bottom"
                                          ItemsSource="{Binding Sources}"
                                          ItemTemplateSelector="{StaticResource SubscriptionSourceTypeListViewItemTemplateSelector}"
                                          Margin="0 4 0 0"
                                          >
                                        <ItemsControl.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Setter Property="Opacity" Value="0.7" />
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <uwpcontrols:WrapPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                    <TextBlock Text="{Binding Label}"
                                       VerticalAlignment="Center"
                                       />
                                </toolkit:DockPanel>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SubscriptionStatusVisualStateGroup_Mobile">
                                        <VisualState>
                                            <VisualState.StateTriggers>
                                                <mytrigger:EqualConditionStateTrigger Value="{Binding Status}" Condition="UpdatePending" />
                                            </VisualState.StateTriggers>

                                            <VisualState.Setters>
                                                <Setter Target="UpdatingNoticeLayout.Visibility" Value="Visible" />

                                                <Setter Target="UpdatingProgressRing.Visibility" Value="Visible" />

                                                <Setter Target="UpdatingProgressRing.IsActive" Value="True" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState>
                                            <VisualState.StateTriggers>
                                                <mytrigger:EqualConditionStateTrigger Value="{Binding Status}" Condition="NowUpdating" />
                                            </VisualState.StateTriggers>

                                            <VisualState.Setters>
                                                <Setter Target="UpdatingNoticeLayout.Visibility" Value="Visible" />
                                                <Setter Target="UpdatingProgressBar.Visibility" Value="Visible" />

                                                <Setter Target="UpdatingProgressBar.IsIndeterminate" Value="True" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState>
                                            <VisualState.StateTriggers>
                                                <mytrigger:EqualConditionStateTrigger Value="{Binding Status}" Condition="Complete" />
                                            </VisualState.StateTriggers>

                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            
                        </UserControl>
                        
                    </DataTemplate>
                </ListView.ItemTemplate>

            </ListView>
        </Grid>

        <Grid x:Name="IndivisualItemView" Visibility="Collapsed">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Background="{StaticResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3"
                    IsHitTestVisible="True"
                    IsTapEnabled="True"
                    x:Name="IndivisualItemViewBackground"
                    Grid.ColumnSpan="2"
                    >
                <i:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:ChangePropertyAction TargetObject="{Binding SelectedSubscription}" PropertyName="Value" Value="{x:Null}" />
                    </core:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </Border>

            <Border Background="{StaticResource ApplicationPageBackgroundThemeBrush}"
                    x:Name="IndivisualItemViewContent"
                    Grid.ColumnSpan="1"
                    Grid.Column="1"
                    >
                <ContentControl Content="{Binding SelectedSubscription.Value, Mode=OneWay}"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Margin="8 0 0 0"
                            >
                    <ContentControl.ContentTemplateSelector>
                        <templateselector:ContentTemplateSelector>
                            <templateselector:ContentTemplateSelector.ContentTemplate>
                                <DataTemplate>
                                    <subscriptionControls:SubscriptionControl />
                                </DataTemplate>
                            </templateselector:ContentTemplateSelector.ContentTemplate>
                        </templateselector:ContentTemplateSelector>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>

            </Border>

        </Grid>


        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="SubscriptionSelectStateGroup">
                
                <!-- Animation implementation with code behind -->
                <VisualState x:Name="SubscriptionSelected">
                    <VisualState.StateTriggers>
                        <mytrigger:EqualConditionStateTrigger Value="{Binding SelectedSubscription.Value, Mode=OneWay}" 
                                                              Condition="{x:Null}"
                                                              Inverted="True"
                                                              />
                    </VisualState.StateTriggers>
                </VisualState>

            </VisualStateGroup>
            
            <VisualStateGroup >
                <VisualState x:Name="EmptySubscriptions">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding SubscriptionManager.Subscriptions, Mode=OneWay, Converter={StaticResource EmptyCollectionToBooleanConverter}}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="EmptySubscriptionsNoticeLayout.Visibility"  Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
