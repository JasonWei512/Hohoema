<Page
    x:Class="NicoPlayerHohoema.Views.FeedVideoListPage_TV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:view="using:NicoPlayerHohoema.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:deviceTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:hohoemalistItem="using:NicoPlayerHohoema.Views.HohoemaListItem"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
          Margin="0 27 0 0"
          >

        <Grid>
            <toolkit:DockPanel Margin="16 0 0 0">

                <toolkit:DockPanel toolkit:DockPanel.Dock="Top" >

                    <toolkit:DockPanel toolkit:DockPanel.Dock="Right" Margin="0 0 48 0">


                        <CommandBar DefaultLabelPosition="Right"
                                Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                toolkit:DockPanel.Dock="Left"
                                >
                            <AppBarButton Label="更新" 
                                        Icon="Refresh"
                                Command="{Binding RefreshCommand}"
                                IsEnabled="{Binding CanChangeSort.Value}"
                                      
                                >
                            </AppBarButton>

                            <AppBarButton Command="{Binding AllMarkAsReadCommand}"
                                    Background="Transparent"
                                      Label="全て既読"
                                    >
                                <StackPanel Orientation="Horizontal">
                                    <iconPack:PackIconMaterial Kind="Check" />
                                </StackPanel>
                            </AppBarButton>

                            <AppBarButton Command="{Binding OpenFeedGroupPageCommand}"
                                    Background="Transparent"
                                    Label="フィード編集"
                                          Icon="Edit"
                                    >
                            </AppBarButton>

                        </CommandBar>


                        <CommandBar DefaultLabelPosition="Right"
                                Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                                toolkit:DockPanel.Dock="Left"
                                >

                            <AppBarButton Command="{Binding RequestCacheDownload}"
                                      
                                      IsEnabled="{Binding CanDownload}"
                                      Label="キャッシュ"
                                          Icon="Download"
                                >
                            </AppBarButton>


                            <AppBarButton Command="{Binding RegistratioMylistCommand}"
                                              Label="マイリストに追加"
                                              Icon="Add"
                                      
                                            >
                            </AppBarButton>

                            
                        </CommandBar>



                        <CommandBar>


                            <AppBarToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                        HorizontalAlignment="Right"
                                            Label="選択"
                                            >
                                <iconPack:PackIconMaterial Kind="CheckboxMarkedOutline" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       />
                            </AppBarToggleButton>
                        </CommandBar>
                    </toolkit:DockPanel>

                    

                    <Border>
                        <Border Background="Transparent" IsHitTestVisible="True"
                            Margin="0 0 0 0"
                            >

                            <TextBlock Text="{Binding Title}" 
                                VerticalAlignment="Center"
                                Style="{StaticResource SubheaderTextBlockStyle}"
                                >

                            </TextBlock>

                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:ChangePropertyAction TargetObject="{Binding ListViewVerticalOffset}" PropertyName="Value" Value="0.0" />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </Border>

                    </Border>

                </toolkit:DockPanel>


                
                <controls:IncrementalLoadingList x:Name="IncrementalLoadingList"
                                                 ItemsSource="{Binding IncrementalLoadingItems}"
                                                 SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                                                 ItemCommand="{Binding SelectItemCommand}"
                                                 IsSelectionEnabled="{Binding IsSelectionModeEnable.Value}"
                                                 Margin="0 0 0 0"
                                                 Padding="0 0 48 0"
                                                 ItemContextFlyout="{StaticResource VideoListItemFlyout}"
                                                 IsTabStop="False"
                                                 >
                    <controls:IncrementalLoadingList.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0 0 0 0"
                                  >

                                
                                
                                <hohoemalistItem:HohoemaListItemMiniCard />

                                <TextBlock Text="New" 
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top"
                                           Visibility="{Binding IsUnread.Value, Converter={StaticResource BooleanToVisibility}}"
                                           Style="{StaticResource SubheaderTextBlockStyle}"
                                           LineStackingStrategy="MaxHeight"
                                           Margin="8 0"
                                       />

                            </Grid>
                        </DataTemplate>
                    </controls:IncrementalLoadingList.ItemTemplate>

                    <controls:IncrementalLoadingList.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal"
                                           Margin="0 0 0 27"
                                           />
                        </ItemsPanelTemplate>
                    </controls:IncrementalLoadingList.ItemsPanel>

                </controls:IncrementalLoadingList>


            </toolkit:DockPanel>
        </Grid>
    </Grid>
</Page>
