<Page
    x:Name="PageRoot"
    x:Class="NicoPlayerHohoema.Views.FavoriteAllFeedPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:view="using:NicoPlayerHohoema.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="FavoriteVideoInfoTemplate">
            <Grid>
                <TextBlock Text="New" 
                           HorizontalAlignment="Right"
                           VerticalAlignment="Top"
                           Visibility="{Binding IsNewItem, Converter={StaticResource BooleanToVisibility}}"
                           />

                <local:VideoInfoControl />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <ProgressRing Visibility="{Binding NowLoadingItems.Value, Converter={StaticResource BooleanToVisibility}}"
                      IsActive="{Binding NowLoadingItems.Value}"
                      Margin="24"
                      Width="48"
                      Height="48"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Bottom"
                                  />
        <Border>
            <toolkit:DockPanel>
                <toolkit:DockPanel toolkit:DockPanel.Dock="Top" >

                    <StackPanel Orientation="Horizontal" Margin="8"
                                toolkit:DockPanel.Dock="Right"
                                >
                        <ToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Content="選択モード"
                              />
                    </StackPanel>


                    <StackPanel toolkit:DockPanel.Dock="Left" Margin="8">

                        <Button Content="全てチェック済みにする" Command="{Binding AllMarkAsReadCommand}" />

                    </StackPanel>
                    

                    <Border></Border>



                </toolkit:DockPanel>




                <toolkit:DockPanel toolkit:DockPanel.Dock="Bottom" 
                           Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                           >
                    <StackPanel toolkit:DockPanel.Dock="Left">
                        <AppBarButton Icon="Read" Content="チェック済み" Command="{Binding SelectedItemsMarkAsReadCommand}" />
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal"
                        toolkit:DockPanel.Dock="Right"
                        >
                        <AppBarButton Icon="Play" Content="連続再生" Command="{Binding PlayAllCommand}" />
                        <AppBarSeparator />
                        <AppBarButton Icon="Download" Content="キャッシュを取得" Command="{Binding RequestCacheDownload}" />
                        <AppBarButton Icon="Cancel" Content="キャッシュを中止" Command="{Binding CancelCacheDownloadRequest}"  />
                        <AppBarSeparator />
                        <AppBarButton Icon="Delete" Content="キャッシュを削除" Command="{Binding DeleteCache}" />
                    </StackPanel>

                    <Border />

                </toolkit:DockPanel>



                <ListView ItemsSource="{Binding IncrementalLoadingItems}"
                          SelectionMode="Multiple"
                          IsMultiSelectCheckBoxEnabled="{Binding IsSelectionModeEnable.Value}"
                          IncrementalLoadingTrigger="Edge"
                              >

                    <i:Interaction.Behaviors>
                        <mybehavior:ListViewSelectedItemsGetter SelectedItems="{Binding SelectedVideoInfoItems, Mode=TwoWay}" />

                        <mybehavior:ListViewVerticalOffsetGetter
                            VerticalOffset="{Binding ListViewVerticalOffset.Value, Mode=TwoWay}"
                            />
                    </i:Interaction.Behaviors>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment"
                                    Value="Stretch" 
                                        />
                            <Setter Property="Margin"
                                    Value="0 0 0 8" 
                                    />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>

                            <Grid Background="Transparent"
                                  IsHitTestVisible="True"
                                  
                                  >

                                <view:VideoInfoControl />


                                <TextBlock Text="New" 
                                           Visibility="{Binding IsUnread.Value, Converter={StaticResource BooleanToVisibility}}"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Top"
                                           FontSize="45"
                                           Foreground="#55777777"
                                           Margin="2 0"
                                           LineStackingStrategy="MaxHeight"
                                           />
                                                                
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:InvokeCommandAction Command="{Binding ElementName=PageRoot, Path=DataContext.PlayCommand}"                                                                      
                                                                  CommandParameter="{Binding}"
                                                                      />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>

                                

                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>


            </toolkit:DockPanel>
        </Border>

    </Grid>
</Page>
