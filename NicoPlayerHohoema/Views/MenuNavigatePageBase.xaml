<ContentControl
    x:Class="NicoPlayerHohoema.Views.MenuNavigatePageBase"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"    
    >
    
    
    <ContentControl.Template>
        <ControlTemplate>

            <Border>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>

                        <VisualState>
                            <!-- ペインを強制非表示 -->
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding InvisiblePane.Value}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                                <Setter Target="TopMenu.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        
                        <VisualState>
                            <!-- 一番幅が広いとき -->
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="1025" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootSplitView.DisplayMode" Value="Inline" />
                                <Setter Target="RootSplitView.IsPaneOpen" Value="True" />
                                <Setter Target="TopMenu.Visibility" Value="Visible" />
                                <Setter Target="PaneToggleButton.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                        <!-- 中ぐらい -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="721" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootSplitView.DisplayMode" Value="CompactOverlay" />
                                <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                                <Setter Target="TopMenu.Visibility" Value="Visible" />
                                <Setter Target="PaneToggleButton.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>
                        <!-- 狭い 
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="600" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                            </VisualState.Setters>
                        </VisualState>
                        -->
                        <!-- 超狭い -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                                <Setter Target="TopMenu.Visibility" Value="Visible" />
                                <Setter Target="PaneToggleButton.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <SplitView x:Name="RootSplitView" 
                           IsPaneOpen="{Binding IsPaneOpen.Value, Mode=TwoWay}"
                           OpenPaneLength="240"
                           >

                    <SplitView.Pane>
                        <Grid>
                            <toolkit:DockPanel>
                                <toolkit:DockPanel.Resources>
                                    <DataTemplate x:Key="MenuListItemTemplate">
                                        <Button Content="{Binding Title}" 
                                                Command="{Binding SelectMenuItemCommand}" 
                                                CommandParameter="{Binding ElementName=PaneToggleButton, Path=Visibility}"
                                                >
                                        </Button>
                                    </DataTemplate>

                                </toolkit:DockPanel.Resources>

                                <ItemsControl toolkit:DockPanel.Dock="Top"
                                              ItemsSource="{Binding TopMenuItems}"
                                              ItemTemplate="{StaticResource MenuListItemTemplate}"
                                              >
                                </ItemsControl>

                                <ItemsControl toolkit:DockPanel.Dock="Bottom"
                                              ItemsSource="{Binding BottomMenuItems}"
                                              ItemTemplate="{StaticResource MenuListItemTemplate}"
                                              >
                                </ItemsControl>
                                
                                <Border />
                            </toolkit:DockPanel>
                        </Grid>
                    </SplitView.Pane>

                    
                    <SplitView.Content>
                        
                        <toolkit:DockPanel>
                            <Border toolkit:DockPanel.Dock="Top" 
                                    x:Name="TopMenu"
                                    Height="48">

                                <toolkit:DockPanel>
                                    <AppBarToggleButton x:Name="PaneToggleButton"
                                        toolkit:DockPanel.Dock="Left" 
                                                        Icon="OpenPane"
                                                        IsChecked="{Binding ElementName=RootSplitView, Path=IsPaneOpen, Mode=TwoWay}"
                                        >
                                    </AppBarToggleButton>

                                    <StackPanel toolkit:DockPanel.Dock="Right"
                                            Orientation="Horizontal"
                                            >
                                        <AppBarButton Icon="Find"
                                                      />

                                    </StackPanel>

                                    <TextBlock Text="Page Title"  VerticalAlignment="Center" FontSize="18"/>
                                </toolkit:DockPanel>
                            </Border>

                            <ContentPresenter />


                        </toolkit:DockPanel>

                    </SplitView.Content>
                </SplitView>
            </Border>
            
        </ControlTemplate>
    </ContentControl.Template>
</ContentControl>
