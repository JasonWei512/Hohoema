<ContentControl
    x:Name="RootLayout"
    x:Class="NicoPlayerHohoema.Views.MenuNavigatePageBase"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:mytrigger="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:myextensions="using:NicoPlayerHohoema.Views.Extensions"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:logicalTrigger="using:AdaptiveTriggerLibrary.Triggers.LogicalTriggers"
    xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
    xmlns:interactionTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInteractionTriggers"
    xmlns:hardwareTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:softwareTrigger="using:AdaptiveTriggerLibrary.Triggers.SoftwareInterfaceTriggers"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrol="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    IsTabStop="False"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    xmlns:templateSelector="using:NicoPlayerHohoema.Views.TemplateSelector"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"    
    >

    <ContentControl.Resources>

        <ResourceDictionary>

            <DataTemplate x:Key="HohoemaContentTemplate">

            </DataTemplate>

            <DataTemplate x:Key="MobileMenuItemTemplate">
                <StackPanel Opacity="0.85">

                    <SymbolIcon Symbol="{Binding IconType}" />

                    <Border Height="4" />
                    <TextBlock Text="{Binding Label}"
                           FontSize="12"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           />

                </StackPanel>

            </DataTemplate>

            <DataTemplate x:Key="MenuItemTemplate">
                <StackPanel Orientation="Horizontal" Opacity="0.85"
                        Margin="4 0 0 0"
                        >
                    <SymbolIcon Symbol="{Binding IconType}" />

                    <Border Height="4" Width="16" />
                    
                    <TextBlock Text="{Binding Label}"
                           VerticalAlignment="Center"
                           FontSize="15"
                           />

                </StackPanel>

            </DataTemplate>
            
        </ResourceDictionary>

    </ContentControl.Resources>
    
    
    <ContentControl.Template>
        <ControlTemplate>

            <Grid x:Name="RootLayout" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="TopBarStateGroup">


                        <!-- トップメニュー非表示 -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsVisibleMenu.Value, Converter={StaticResource BooleanInverted}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />

                            </VisualState.Setters>
                        </VisualState>

                        <!-- TV Mode ON -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsTVModeEnable.Value}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="CompactInline" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
                                <Setter Target="ContentLayout.Margin" Value="0 0 0 0" />

                            </VisualState.Setters>
                        </VisualState>

                        <!-- マウス操作時、または画面が大きい時 -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="800" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="CompactInline" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="True" />
                            </VisualState.Setters>
                        </VisualState>

                        <!-- マウス操作時、または画面が大きい時 -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="520" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="CompactOverlay" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="True" />
                            </VisualState.Setters>
                        </VisualState>

                        <!-- 狭い -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MobileTopMenu.Visibility" Value="Visible" />

                                <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />

                                <Setter Target="SideMenu_SearchBoxLayout.Visibility" Value="Collapsed" />

                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>


                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <hardwareTrigger:DeviceFamilyTrigger Condition="Xbox" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.Margin" Value="48 0 0 0" />
                                <Setter Target="PaneLayout.Margin" Value="0 27 0 27" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>


                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsNeedFullScreenToggleHelp}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="ToggleFullScreenButton_Mobile.Visibility" Value="Visible" />
                                <Setter Target="ToggleFullScreenButton_Wide.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>

                    <!-- アプリのサービス状態 -->
                    <VisualStateGroup>
                        <VisualState x:Name="OfflineState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="Offline" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ServiceStateText.Visibility" Value="Visible" />
                                <!--<Setter Target="ServiceStateText_TV.Visibility" Value="Visible" />-->
                                <Setter Target="ServiceStateText_Mobile.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="ServiceUnavailableState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="OnlineButServiceUnavailable" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ServiceStateText.Visibility" Value="Visible" />
                                <!--<Setter Target="ServiceStateText_TV.Visibility" Value="Visible" />-->
                                <Setter Target="ServiceStateText_Mobile.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>


                        <VisualState x:Name="WithoutLoggedInState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="OnlineWithoutLoggedIn" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ServiceStateText.Visibility" Value="Visible" />
                                <!--<Setter Target="ServiceStateText_TV.Visibility" Value="Visible" />-->
                                <Setter Target="ServiceStateText_Mobile.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="LoggedInState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="LoggedIn" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="AccountInfoLayout.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>


                    </VisualStateGroup>

                    <!-- ナビゲーション時のコンテンツ表示状態制御 -->
                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding NowNavigating.Value}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="ContentLayout.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>


                    <!-- モバイルの検索テキストボックスのフォーカス状態 -->
                    <VisualStateGroup>

                        
                        <VisualState >
                            <VisualState.StateTriggers>
                                <mytrigger:FocusTrigger Target="{Binding ElementName=Nallow_SearchTextBox}" Inverted="True" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="Nallow_SearchTextBox.Visibility" Value="Collpased" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>


                    <!-- ペインの開閉状態 -->
                    <VisualStateGroup>
                        
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding ElementName=ContentSplitView, Path=IsPaneOpen}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="SideMenu_SearchBoxActivateButton.Visibility" Value="Collapsed" />
                                <Setter Target="SideMenu_SearchTextBox.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>


                </VisualStateManager.VisualStateGroups>

                <toolkit:DockPanel>
                    
                    <SplitView x:Name="ContentSplitView" 
                        CompactPaneLength="48"
                        OpenPaneLength="240"
                        DisplayMode="Inline"
                        IsPaneOpen="{Binding IsOpenPane.Value, Mode=TwoWay}"
                               IsTabStop="False"
                        >
                        <SplitView.PaneBackground>
                            <SolidColorBrush Color="{ThemeResource SystemAltMediumHighColor}" />
                        </SplitView.PaneBackground>
                        <SplitView.Pane>

                            <toolkit:DockPanel x:Name="PaneLayout" 
                                               mybehavior:XYNavigationExtentions.FocusAcceptOrientation="Horizontal"

                                               >

                                <Button Command="{Binding OpenAccountInfoCommand}"
                                        toolkit:DockPanel.Dock="Bottom"
                                        Padding="16 0 0 0"
                                        Background="Transparent" 
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        VerticalContentAlignment="Center"
                                        TabIndex="15"
                                        >
                                    <StackPanel>
                                        <TextBlock Text="{Binding ServiceLevel.Value, Converter={StaticResource ToLocalText}}" 
                                                   x:Name="ServiceStateText"
                                                   Visibility="Collapsed"
                                               />

                                        <toolkit:DockPanel Margin="0 0"
                                                           x:Name="AccountInfoLayout"
                                                           Visibility="Collapsed"
                                                           >

                                            <Image Source="{Binding UserIconUrl}" 
                                                toolkit:DockPanel.Dock="Left"
                                                Height="32" Width="32"
                                                Margin="0 0 8 0"
                                                            />

                                            <StackPanel>
                                                <TextBlock Text="{Binding UserName}" />
                                                <TextBlock Text="{Binding UserMail}" FontWeight="Light" 
                                                       TextWrapping="Wrap"
                                                       FontSize="13"
                                                       />
                                            </StackPanel>
                                        </toolkit:DockPanel>

                                    </StackPanel>
                                </Button>

                                <Border x:Name="ToggleFullScreenButton_Wide"
                                        HorizontalAlignment="Right"
                                        toolkit:DockPanel.Dock="Top"
                                        Height="48"
                                                >
                                    <Button Command="{Binding ToggleFullScreenCommand}"
                                                    Background="Transparent"
                                                    Visibility="Collapsed"
                                                    TabIndex="10"
                                                    >
                                        <SymbolIcon Symbol="FullScreen" />
                                    </Button>
                                </Border>

                                
                                <ScrollViewer HorizontalScrollMode="Disabled"
                                    VerticalScrollMode="Auto"
                                    VerticalScrollBarVisibility="Hidden"
                                              Margin="0 0 0 0"
                                    >

                                    <StackPanel>

                                        
                                        <Grid x:Name="SideMenu_SearchBoxLayout">
                                            <Button x:Name="SideMenu_SearchBoxActivateButton"
                                            Background="Transparent"
                                                    >
                                                <SymbolIcon Symbol="Find" />

                                                <i:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="Tapped">
                                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=ContentSplitView}" PropertyName="IsPaneOpen" Value="True" />
                                                        <mybehavior:SetFocus TargetObject="{Binding ElementName=SideMenu_SearchTextBox}" />
                                                    </core:EventTriggerBehavior>
                                                </i:Interaction.Behaviors>
                                            </Button>

                                            <!-- サイドメニューの検索バー -->
                                            <AutoSuggestBox Text="{Binding SearchKeyword.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            PlaceholderText="検索"
                                                            x:Name="SideMenu_SearchTextBox"
                                                            VerticalAlignment="Stretch"
                                                                QueryIcon="Find"
                                                        Height="36"
                                                        Margin="8 4 8 8"
                                                        Visibility="Collapsed"
                                                        >
                                                <i:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="QuerySubmitted">
                                                        <core:InvokeCommandAction Command="{Binding SearchCommand}" />
                                                    </core:EventTriggerBehavior>

                                                    <mybehavior:KeyboardTrigger Key="Enter">
                                                        <core:InvokeCommandAction Command="{Binding SearchCommand}" />
                                                    </mybehavior:KeyboardTrigger>
                                                </i:Interaction.Behaviors>
                                            </AutoSuggestBox>


                                        </Grid>
                                            


                                        <ListView ItemsSource="{Binding MenuItems}"
                                                    SelectedItem="{Binding MainSelectedItem.Value, Mode=TwoWay}"
                                                    SelectionMode="Single"
                                                  ItemTemplate="{StaticResource MenuItemTemplate}"
                                                    IsTabStop="False"
                                                  Background="Transparent"
                                                  SingleSelectionFollowsFocus="False"
                                                  TabIndex="5"
                                                  uwpui:ListViewBase.Command="{Binding MenuItemSelectedCommand}"
                                                  IsItemClickEnabled="True"
                                                      ScrollViewer.VerticalScrollMode="Disabled"
                                                >
                                            <ListView.ItemContainerTransitions>
                                                <TransitionCollection />
                                            </ListView.ItemContainerTransitions>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                        </ListView>

                                        <Border Height="24" />

                                        <ListView ItemsSource="{Binding SubMenuItems}"
                                                    SelectedItem="{Binding MainSelectedItem.Value, Mode=TwoWay}"
                                                    SelectionMode="Single"
                                                  ItemTemplate="{StaticResource MenuItemTemplate}"
                                                    IsTabStop="False"
                                                  Background="Transparent"
                                                  SingleSelectionFollowsFocus="False"
                                                  TabIndex="5"
                                                  uwpui:ListViewBase.Command="{Binding MenuItemSelectedCommand}"
                                                  IsItemClickEnabled="True"
                                                  ScrollViewer.VerticalScrollMode="Disabled"
                                                >
                                            <ListView.ItemContainerTransitions>
                                                <TransitionCollection />
                                            </ListView.ItemContainerTransitions>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                        </ListView>


                                    </StackPanel>



                                </ScrollViewer>
                            </toolkit:DockPanel>
                        </SplitView.Pane>
                        <SplitView.Content>
                            <Grid>

                                <toolkit:DockPanel>

                                    <!-- モバイルのトップメニュー -->
                                    <toolkit:DockPanel 
                                    x:Name="MobileTopMenu"
                                    toolkit:DockPanel.Dock="Top"
                                    Visibility="Collapsed"
                                        Height="48"
                                    >

                                        
                                        <Grid>
                                            <TextBlock Text="{Binding TitleText}"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource TitleTextBlockStyle}"
                                               Margin="64 0 0 0"
                                               />

                                            
                                            <Button HorizontalAlignment="Right"
                                                    Background="Transparent"
                                                    >
                                                <SymbolIcon Symbol="Find" />

                                                <i:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="Tapped">
                                                        <core:ChangePropertyAction TargetObject="{Binding ElementName=Nallow_SearchLayout}" PropertyName="Visibility" Value="Visible" />
                                                        <mybehavior:SetFocus TargetObject="{Binding ElementName=Nallow_SearchTextBox}" />
                                                    </core:EventTriggerBehavior>
                                                </i:Interaction.Behaviors>
                                            </Button>

                                            <Grid x:Name="Nallow_SearchLayout" Padding="8 4" 
                                                                Visibility="Collapsed"
                                                  Background="{StaticResource SystemControlBackgroundAltHighBrush}"
                                                  
                                                  Margin="48 0 0 0"
                                                  >
                                                <AutoSuggestBox x:Name="Nallow_SearchTextBox"
                                                    Text="{Binding SearchKeyword.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        PlaceholderText="検索"
                                                           HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                                QueryIcon="Find"
                                                                Height="36"
                                                        >
                                                    <i:Interaction.Behaviors>
                                                        <core:EventTriggerBehavior EventName="LostFocus" >
                                                            <core:ChangePropertyAction TargetObject="{Binding ElementName=Nallow_SearchLayout}" PropertyName="Visibility" Value="Collapsed" />
                                                        </core:EventTriggerBehavior>
                                                        
                                                        
                                                        <core:EventTriggerBehavior EventName="QuerySubmitted">
                                                            <core:InvokeCommandAction Command="{Binding SearchCommand}" />
                                                        </core:EventTriggerBehavior>

                                                        <mybehavior:KeyboardTrigger Key="Enter">
                                                            <core:InvokeCommandAction Command="{Binding SearchCommand}" />
                                                        </mybehavior:KeyboardTrigger>
                                                    </i:Interaction.Behaviors>
                                                </AutoSuggestBox>
                                            </Grid>

                                        </Grid>

                                    </toolkit:DockPanel>

                                    <Grid x:Name="ContentLayout">

                                        <!-- ページナビゲーション中にフォーカスをコンテントエリア内に残すためのハック -->
                                        <Button Background="Transparent"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Visibility="{Binding NowNavigating.Value, Converter={StaticResource BooleanToVisibility}}"
                                            >

                                        </Button>

                                        <!-- ページ毎のコンテンツ -->
                                        <ContentPresenter
                                            >
                                            <myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
                                                <templateSelector:HohoemaFlyoutTemplateSelector>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:VideoListItemFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:LiveListItemFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.FeedGroupFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:FeedGroupListItemFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.FeedGroupFlyoutTemplate>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.FeedSourceFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:FeedSourceFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.FeedSourceFlyoutTemplate>
                                                </templateSelector:HohoemaFlyoutTemplateSelector>
                                            </myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>


                                            <i:Interaction.Behaviors>
                                                <core:DataTriggerBehavior Binding="{Binding NowNavigating.Value, Converter={StaticResource BooleanInverted}}">
                                                    <mybehavior:SetFocus Delay="300" />
                                                </core:DataTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                        </ContentPresenter>


                                    </Grid>

                                   
                                </toolkit:DockPanel>

                                <!--
                                <Border Visibility="{Binding HasBGUpdateText.Value, Converter={StaticResource BooleanToVisibility}}"
                                                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Bottom"
                                                Padding="2"
                                                >
                                    <TextBlock Text="{Binding BGUpdateText.Value}"
                                            FontSize="12"
                                            Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                            />
                                </Border>
                                -->

                                <Border x:Name="MobileSearchTapBarrier" 
                                        Visibility="{Binding IsMobileNowSearching, Converter={StaticResource BooleanToVisibility}}"
                                        Background="Black"
                                        Opacity="0.5"
                                        >
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:InvokeCommandAction Command="{Binding StartMobileSearchCommand}" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </Border>

                                
                            </Grid>

                        </SplitView.Content>
                    </SplitView>
                </toolkit:DockPanel>


                <!-- モバイル時のメニュー開閉ボタン -->
                <Button x:Name="MenuToggleButton"
                    Background="Transparent" 
                              Command="{Binding TogglePaneOpenCommand}"
                        Height="48"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                              >
                    <iconPack:PackIconMaterial Kind="Hamburger" />
                </Button>


                <Grid Visibility="{Binding NowWorking, Converter={StaticResource BooleanToVisibility}}">

                    <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.8" />
                    
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="400">

                        <TextBlock Text="{Binding WorkTitle}"
                                   FontSize="20"
                                   />

                        <StackPanel Margin="0 16">

                            <!--
                            <TextBlock HorizontalAlignment="Right" FontSize="12">
                                <Run Text="{Binding WorkCount}" />
                                <Run Text="/" />
                                <Run Text="{Binding WorkTotalCount}" />
                            </TextBlock>
                            -->
                            
                            <ProgressBar Minimum="0" Maximum="{Binding WorkTotalCount}"
                                     Value="{Binding WorkCount}"
                                     />


                        </StackPanel>
                        
                        <ProgressRing IsActive="{Binding NowWorking}" Margin="8" />

                    </StackPanel>
                                

                </Grid>
                
            </Grid>

        </ControlTemplate>
    </ContentControl.Template>
</ContentControl>
