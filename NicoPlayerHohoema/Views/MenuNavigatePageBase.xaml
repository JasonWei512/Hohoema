<ContentControl
    x:Name="RootLayout"
    x:Class="NicoPlayerHohoema.Views.MenuNavigatePageBase"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:mytrigger="using:NicoPlayerHohoema.Views.StateTrigger"
    xmlns:myextensions="using:NicoPlayerHohoema.Views.Extensions"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:logicalTrigger="using:AdaptiveTriggerLibrary.Triggers.LogicalTriggers"
    xmlns:uiTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInterfaceTriggers"
    xmlns:interactionTrigger="using:AdaptiveTriggerLibrary.Triggers.UserInteractionTriggers"
    xmlns:hardwareTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    xmlns:softwareTrigger="using:AdaptiveTriggerLibrary.Triggers.SoftwareInterfaceTriggers"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:uwpcontrol="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:uwpui="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    IsTabStop="False"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    xmlns:templateSelector="using:NicoPlayerHohoema.Views.TemplateSelector"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"    
    >

    <ContentControl.Resources>

        <ResourceDictionary>


            <x:String x:Key="SideMenuPaneLength" >280</x:String>
            <x:String x:Key="DesktopFloatPlayerHeight" >160</x:String>
            <x:String x:Key="MobileFloatPlayerHeight" >240</x:String>

            <DataTemplate x:Key="MenuItemTemplate">
                <StackPanel Orientation="Horizontal" Opacity="0.85"
                        Margin="16 0 0 0"
                        >

                    <iconPack:PackIconMaterial Kind="{Binding PageType, Converter={StaticResource PageTypeToMaterialIconKind}}" 
                                               Width="16"
                                               Height="16"
                                               VerticalAlignment="Center"
                                               Opacity="0.7"
                                               />

                    <Border Height="4" Width="16" />

                    <TextBlock Text="{Binding Label}"
                           VerticalAlignment="Center"
                           FontSize="15"
                           />

                </StackPanel>
            </DataTemplate>


            <DataTemplate x:Key="SingleMenuItemTemplate">
                <ListView uwpui:ListViewBase.Command="{StaticResource OpenHohoemaPageCommand}"
                              IsItemClickEnabled="True"
                          SelectionMode="None"
                                      >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListViewItem ContentTemplate="{StaticResource MenuItemTemplate}"
                                      Content="{Binding}"
                                      >

                    </ListViewItem>

                </ListView>
            </DataTemplate>


            <templateSelector:MenuItemTemplateSelector x:Key="MenuItemTemplateSelector"
                                                       MenuItem="{StaticResource SingleMenuItemTemplate}"
                                                       >

                <templateSelector:MenuItemTemplateSelector.SubMenuItem>
                    <DataTemplate>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Opacity="0.55"
                        Margin="4 0 0 0"
                        >
                                <!--
                            <SymbolIcon Symbol="{Binding IconType}" />
                            -->
                                <Border Height="4" Width="16" />

                                <TextBlock Text="{Binding Label}"
                                VerticalAlignment="Center"
                                FontSize="14"
                                           Margin="0 8"
                                />

                            </StackPanel>

                            <ListView ItemsSource="{Binding SubItems}"
                                      ItemTemplate="{StaticResource MenuItemTemplate}"
                                      uwpui:ListViewBase.Command="{StaticResource OpenHohoemaPageCommand}"
                                      IsItemClickEnabled="True"
                                      SelectionMode="None"
                                      >
                                
                            </ListView>
                            
                        </StackPanel>
                    </DataTemplate>
                </templateSelector:MenuItemTemplateSelector.SubMenuItem>
            </templateSelector:MenuItemTemplateSelector>

           
        </ResourceDictionary>

    </ContentControl.Resources>
    
    
    <ContentControl.Template>
        <ControlTemplate>

            <Grid x:Name="RootLayout" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="TopBarStateGroup">


                        <!-- トップメニュー非表示 -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsVisibleMenu.Value, Converter={StaticResource BooleanInverted}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />


                            </VisualState.Setters>
                        </VisualState>

                        <!-- TV Mode ON -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsTVModeEnable.Value}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />
                                <Setter Target="PaneLayout.Margin" Value="48 27 0 27" />

                                <Setter Target="MobileTopMenu.Visibility" Value="Visible" />

                                <Setter Target="ContentLayout.Margin" Value="0 0 0 0" />
                                <Setter Target="MobileTopMenu.Margin" Value="48 0 0 0" />
                                <Setter Target="TopMenuGridRow.Height" Value="75" />
                                <Setter Target="ContentLayout.(Grid.Row)" Value="0" />
                                <Setter Target="ContentLayout.(Grid.RowSpan)" Value="2" />

                                <!-- メニューを開いた時にアカウント表示にフォーカスが移ってしまう問題に対応 -->
                                <Setter Target="OpenAccountButton.IsEnabled" Value="False" />
                            </VisualState.Setters>
                        </VisualState>

                        <!-- マウス操作時、または画面が大きい時 -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="520" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ContentSplitView.DisplayMode" Value="CompactInline" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="True" />
                            </VisualState.Setters>
                        </VisualState>

                        <!-- 狭い -->
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MobileTopMenu.Visibility" Value="Visible" />
                                <Setter Target="TopMenuGridRow.Height" Value="48" />

                                <Setter Target="ContentLayout.(Grid.Row)" Value="0" />
                                <Setter Target="ContentLayout.(Grid.RowSpan)" Value="2" />

                                <Setter Target="ContentSplitView.DisplayMode" Value="Overlay" />
                                <Setter Target="ContentSplitView.IsPaneOpen" Value="False" />

                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>


                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsNeedFullScreenToggleHelp}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="ToggleFullScreenButton_Wide.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>

                    <!-- アプリのサービス状態 -->
                    <VisualStateGroup>
                        <VisualState x:Name="OfflineState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="Offline" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ServiceStateText.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="ServiceUnavailableState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="OnlineButServiceUnavailable" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ServiceStateText.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>


                        <VisualState x:Name="WithoutLoggedInState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="OnlineWithoutLoggedIn" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="ServiceStateText.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="LoggedInState">
                            <VisualState.StateTriggers>
                                <mytrigger:EqualConditionStateTrigger Value="{Binding ServiceLevel.Value}" Condition="LoggedIn" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="AccountInfoLayout.Visibility" Value="Visible" />
                            </VisualState.Setters>
                        </VisualState>


                    </VisualStateGroup>

                    <!-- ナビゲーション時のコンテンツ表示状態制御 -->
                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding NowNavigating.Value}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="ContentLayout.Visibility" Value="Collapsed" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>



                    <!-- ペインの開閉状態 -->
                    <VisualStateGroup>
                        
                        <VisualState>
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding ElementName=ContentSplitView, Path=IsPaneOpen}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>


                    <!-- プレイヤーの表示状態 -->
                    <VisualStateGroup>

                        <VisualState x:Name="HiddenPlayer">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsShowPlayer.Value, Converter={StaticResource BooleanInverted}}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="FillWindowPlayer">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsShowPlayerInFill.Value}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="PlayerLayoutGrid.Visibility" Value="Visible" />

                                <Setter Target="ContentSplitView.Visibility" Value="Collapsed" />

                                <Setter Target="MenuToggleTrigger.IsEnabled" Value="False" />
                                <Setter Target="PlayerDisplayIntoSmallWindowTrigger.IsEnabled" Value="True" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="DisplayIntoSide">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsTVModeEnable.Value}" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="PlayerLayoutGrid.Visibility" Value="Visible" />
                                <Setter Target="TogglePlayerFloatButton.Visibility" Value="Visible" />

                                <Setter Target="FloatPlayerLayout.(Grid.Row)" Value="2" />
                                <Setter Target="FloatPlayerLayout.(Grid.Column)" Value="0" />
                                <Setter Target="FloatPlayerLayout.(Grid.RowSpan)" Value="1" />
                                <Setter Target="FloatPlayerLayout.(Grid.ColumnSpan)" Value="1" />

                                <Setter Target="FloatPlayerLayout.Height" Value="{StaticResource DesktopFloatPlayerHeight}" />
                                <Setter Target="FloatPlayerLayout.Width" Value="{StaticResource SideMenuPaneLength}" />

                                <Setter Target="TVModeFloatPlayerRewindSizeButton.Visibility" Value="Visible" />

                                <Setter Target="FloatPlayerLayout.HorizontalAlignment" Value="Right" />
                                <Setter Target="FloatPlayerLayout.VerticalAlignment" Value="Bottom" />

                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="DisplayIntoDesktopMenu">
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="520" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="PlayerLayoutGrid.Visibility" Value="Visible" />
                                <Setter Target="TogglePlayerFloatButton.Visibility" Value="Visible" />

                                <Setter Target="FloatPlayerLayout.(Grid.Row)" Value="2" />
                                <Setter Target="FloatPlayerLayout.(Grid.Column)" Value="0" />
                                <Setter Target="FloatPlayerLayout.(Grid.RowSpan)" Value="1" />
                                <Setter Target="FloatPlayerLayout.(Grid.ColumnSpan)" Value="1" />

                                <Setter Target="SideMenuFooterBottomMargin.Visibility" Value="Visible" />

                                <Setter Target="FloatPlayerLayout.Height" Value="{StaticResource DesktopFloatPlayerHeight}" />
                                <Setter Target="FloatPlayerLayout.Width" Value="{StaticResource SideMenuPaneLength}" />

                                <Setter Target="FloatPlayerLayout.HorizontalAlignment" Value="Left" />
                                <Setter Target="FloatPlayerLayout.VerticalAlignment" Value="Bottom" />

                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="DisplayIntoMobileTopSide">
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0" />
                            </VisualState.StateTriggers>

                            <VisualState.Setters>
                                <Setter Target="PlayerLayoutGrid.Visibility" Value="Visible" />
                                <Setter Target="TogglePlayerFloatButton.Visibility" Value="Visible" />

                                <Setter Target="FloatPlayerLayout.(Grid.Row)" Value="0" />
                                <Setter Target="FloatPlayerLayout.(Grid.Column)" Value="0" />
                                <Setter Target="FloatPlayerLayout.(Grid.RowSpan)" Value="1" />
                                <Setter Target="FloatPlayerLayout.(Grid.ColumnSpan)" Value="2" />

                                <Setter Target="MobileHeaderMargin.Visibility" Value="Visible" />

                                <Setter Target="FloatPlayerLayout.Height" Value="{StaticResource MobileFloatPlayerHeight}" />
                                <Setter Target="FloatPlayerLayout.VerticalAlignment" Value="Top" />
                                
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>


                </VisualStateManager.VisualStateGroups>

                <toolkit:DockPanel>

                    <Border x:Name="MobileHeaderMargin"
                            Height="{StaticResource MobileFloatPlayerHeight}"
                            Visibility="Collapsed"
                            toolkit:DockPanel.Dock="Top"
                            >
                        
                    </Border>

                    

                    <SplitView x:Name="ContentSplitView" 
                        CompactPaneLength="48"
                        OpenPaneLength="{StaticResource SideMenuPaneLength}"
                        DisplayMode="Inline"
                        IsPaneOpen="{Binding IsOpenPane.Value, Mode=TwoWay}"
                               IsTabStop="False"
                        >

                        <SplitView.PaneBackground>
                            <SolidColorBrush Color="{ThemeResource SystemChromeLowColor}" />
                        </SplitView.PaneBackground>
                        <SplitView.Pane>

                            <toolkit:DockPanel x:Name="PaneLayout" 

                                               >

                                <Button x:Name="TVModeFloatPlayerRewindSizeButton"
                                        Visibility="Collapsed"
                                        toolkit:DockPanel.Dock="Top"
                                        Background="Transparent"
                                        Command="{Binding TogglePlayerFloatDisplayCommand}"
                                        >
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE743;"
                                                                                FontSize="24"
                                                                                VerticalAlignment="Center"
                                                                                Height="24"
                                                                                Width="24"
                                                                                HorizontalAlignment="Center"
                                                                            />

                                        <TextBlock Text="プレイヤーを全体表示" 
                                       VerticalAlignment="Center"
                                       Margin="8 0 0 0"
                                       />
                                    </StackPanel>
                                </Button>

                                <toolkit:DockPanel HorizontalAlignment="Stretch"
                                            toolkit:DockPanel.Dock="Bottom"
                                            >
                                    <Border x:Name="SideMenuFooterBottomMargin" 
                                            Height="{StaticResource DesktopFloatPlayerHeight}"
                                            Visibility="Collapsed"
                                            toolkit:DockPanel.Dock="Bottom"
                                            />


                                    <Button Command="{Binding OpenAccountInfoCommand}"
                                        Padding="16 0 0 0"
                                        Background="Transparent" 
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        VerticalContentAlignment="Center"
                                            x:Name="OpenAccountButton"
                                        >
                                        <StackPanel>
                                            <TextBlock Text="{Binding ServiceLevel.Value, Converter={StaticResource ToLocalText}}" 
                                                   x:Name="ServiceStateText"
                                                   Visibility="Collapsed"
                                               />

                                            <toolkit:DockPanel Margin="0 0"
                                                           x:Name="AccountInfoLayout"
                                                           Visibility="Collapsed"
                                                           >

                                                <Image Source="{Binding UserIconUrl}" 
                                                toolkit:DockPanel.Dock="Left"
                                                Height="24" Width="24"
                                                Margin="0 0 8 0"
                                                            />

                                                <StackPanel>
                                                    <TextBlock Text="{Binding UserName}" />
                                                    <TextBlock Text="{Binding UserMail}" FontWeight="Light" 
                                                       TextWrapping="Wrap"
                                                       FontSize="13"
                                                       />
                                                </StackPanel>
                                            </toolkit:DockPanel>

                                        </StackPanel>
                                    </Button>

                                    
                                </toolkit:DockPanel>


                                <Grid toolkit:DockPanel.Dock="Top" 
                                      >
                                    <Border x:Name="ToggleFullScreenButton_Wide"
                                        HorizontalAlignment="Right"
                                        Height="48"     
                                            Visibility="Collapsed"
                                                >
                                        <Button Command="{Binding ToggleFullScreenCommand}"
                                                    Background="Transparent"
                                                    Visibility="Collapsed"
                                                    TabIndex="10"
                                                    >
                                            <SymbolIcon Symbol="FullScreen" />
                                        </Button>
                                    </Border>

                                    <!-- メニュー開閉ボタン -->
                                    
                                    <!--
                                    <Button 
                                    Background="Transparent" 
                                              Command="{Binding TogglePaneOpenCommand}"
                                        Height="48"
                                        HorizontalAlignment="Left"
                                          >
                                        <iconPack:PackIconMaterial Kind="Menu"
                                                                   Height="18"
                                                                   Width="18"
                                                                   />
                                    </Button>
                                    -->


                                </Grid>

                                <ScrollViewer HorizontalScrollMode="Disabled"
                                    VerticalScrollMode="Auto"
                                    VerticalScrollBarVisibility="Hidden"
                                              Margin="0 0 0 0"
                                    >

                                    <StackPanel>

                                        <StackPanel>
                                            <toolkit:DockPanel 
                                                Margin="0"
                                            >

                                                <Button Command="{Binding AddPinToCurrentPageCommand}"
                                                        Background="Transparent"
                                                        Height="24"
                                                        toolkit:DockPanel.Dock="Right"
                                                        Margin="0 0 8 0"
                                                        >
                                                    <SymbolIcon Symbol="Add" 
                                                                ToolTipService.ToolTip="現在のページをピン留めする"
                                                                Opacity="0.55"
                                                                />
                                                </Button>

                                                <TextBlock Text="ピン留め"
                                                           VerticalAlignment="Center"
                                                           FontSize="14"
                                                           Margin="16 0 0 0"
                                                           Opacity="0.55"
                                                    />



                                            </toolkit:DockPanel>

                                            <ListView ItemsSource="{Binding PinItems}"
                                                        ItemTemplate="{StaticResource MenuItemTemplate}"
                                                        uwpui:ListViewBase.Command="{StaticResource OpenHohoemaPageCommand}"
                                                        IsItemClickEnabled="True"
                                                        SelectionMode="None"
                                                      TabIndex="1"
                                                        >
                                                <ListView.ContextFlyout>
                                                    <MenuFlyout>
                                                        <MenuFlyoutItem Text="ピン留め解除" 
                                                                        Command="{StaticResource RemovePinCommand}"
                                                                        CommandParameter="{Binding}"
                                                                        />
                                                    </MenuFlyout>
                                                </ListView.ContextFlyout>

                                                <i:Interaction.Behaviors>
                                                    <mybehavior:ListViewBaseItemContextFlyout />
                                                </i:Interaction.Behaviors>
                                            </ListView>

                                            <StackPanel Visibility="{Binding PinItems, Converter={StaticResource EmptyCollectionVisibilityConverter}}"
                                                        Margin="0 8"
                                                        >

                                                <TextBlock Opacity="0.7" FontSize="12" Margin="24 0 0 0">
                                                    好きなページを開いて「＋ボタン」でピン留め
                                                </TextBlock>
                                            </StackPanel>
                                        </StackPanel>

                                        <ItemsControl ItemsSource="{Binding MenuItems}"
                                                  ItemTemplateSelector="{StaticResource MenuItemTemplateSelector}"
                                                    IsTabStop="False"
                                                  Background="Transparent"
                                                  TabIndex="0"
                                                      ScrollViewer.VerticalScrollMode="Disabled"
                                                >
                                        </ItemsControl>

                                        


                                    </StackPanel>



                                </ScrollViewer>
                            </toolkit:DockPanel>
                        </SplitView.Pane>
                        <SplitView.Content>
                            <Grid>

                                <Grid x:Name="SplitViewContentLayout">

                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="TopMenuGridRow" Height="0" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    
                                    
                                    <Grid x:Name="ContentLayout"
                                          Grid.RowSpan="1"
                                          Grid.Row="1"
                                          >

                                        <!-- ページナビゲーション中にフォーカスをコンテントエリア内に残すためのハック -->
                                        <Button Background="Transparent"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Visibility="{Binding NowNavigating.Value, Converter={StaticResource BooleanToVisibility}}"
                                            >

                                        </Button>

                                        <!-- ページ毎のコンテンツ -->
                                        <ContentPresenter
                                            >
                                            <myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>
                                                <templateSelector:HohoemaFlyoutTemplateSelector>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:VideoListItemFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.VideoFlyoutTemplate>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:LiveListItemFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.LiveFlyoutTemplate>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.FeedGroupFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:FeedGroupListItemFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.FeedGroupFlyoutTemplate>
                                                    <templateSelector:HohoemaFlyoutTemplateSelector.FeedSourceFlyoutTemplate>
                                                        <DataTemplate>
                                                            <controls:FeedSourceFlyout />
                                                        </DataTemplate>
                                                    </templateSelector:HohoemaFlyoutTemplateSelector.FeedSourceFlyoutTemplate>
                                                </templateSelector:HohoemaFlyoutTemplateSelector>
                                            </myextensions:ContextFlyoutExtension.FlyoutTemplateSelector>


                                            <i:Interaction.Behaviors>
                                                <core:DataTriggerBehavior Binding="{Binding NowNavigating.Value, Converter={StaticResource BooleanInverted}}">
                                                    <mybehavior:SetFocus Delay="300" />
                                                </core:DataTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                        </ContentPresenter>


                                    </Grid>

                                    <!-- モバイルのトップメニュー -->
                                    <toolkit:DockPanel x:Name="MobileTopMenu"
                                    VerticalAlignment="Bottom"
                                    Grid.RowSpan="1"
                                    Visibility="Collapsed"
                                    >


                                        <Grid>

                                            <!-- モバイル時のメニュー開閉ボタン -->
                                            <Button x:Name="MenuToggleButton"
                                                    Background="Transparent" 
                                                      Command="{Binding TogglePaneOpenCommand}"
                                                    Height="48"
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Left"
                                                    >
                                                <iconPack:PackIconMaterial Kind="Menu"
                                                                           Height="18"
                                                                           Width="18"
                                                                           />
                                            </Button>

                                        </Grid>

                                    </toolkit:DockPanel>



                                </Grid>

                                <!--
                                <Border Visibility="{Binding HasBGUpdateText.Value, Converter={StaticResource BooleanToVisibility}}"
                                                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Bottom"
                                                Padding="2"
                                                >
                                    <TextBlock Text="{Binding BGUpdateText.Value}"
                                            FontSize="12"
                                            Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                            />
                                </Border>
                                -->
                                
                            </Grid>

                        </SplitView.Content>
                    </SplitView>
                </toolkit:DockPanel>


                <Grid x:Name="PlayerLayoutGrid"
                    Visibility="Collapsed"
                      >

                    <i:Interaction.Behaviors>
                        <mybehavior:UINavigationTrigger Kind="View" 
                                                        x:Name="MenuToggleTrigger"
                                                    >
                            <core:InvokeCommandAction Command="{Binding TogglePaneOpenCommand}" />
                        </mybehavior:UINavigationTrigger>

                        <mybehavior:UINavigationTrigger Kind="View" 
                                                        x:Name="PlayerDisplayIntoSmallWindowTrigger"
                                                        IsEnabled="False"
                                                    >
                            <core:InvokeCommandAction Command="{Binding TogglePlayerFloatDisplayCommand}" />
                        </mybehavior:UINavigationTrigger>
                    </i:Interaction.Behaviors>

                    <Grid x:Name="FloatPlayerLayout"
                          >
                        <Frame x:Name="PlayerFrame" 
                           
                           
                          
                                            />
                        <Button x:Name="TogglePlayerFloatButton"
                            Background="Transparent"
                            Command="{Binding TogglePlayerFloatDisplayCommand}"
                            Visibility="Collapsed"
                            HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                            >
                            <Button.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="閉じる" Command="{Binding ClosePlayerCommand}"/>
                                </MenuFlyout>
                            </Button.ContextFlyout>
                        </Button>
                    </Grid>

                    
                </Grid>
                


                <Grid Visibility="{Binding NowWorking, Converter={StaticResource BooleanToVisibility}}">

                    <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.8" />
                    
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="400">

                        <TextBlock Text="{Binding WorkTitle}"
                                   FontSize="20"
                                   />

                        <StackPanel Margin="0 16">

                            <!--
                            <TextBlock HorizontalAlignment="Right" FontSize="12">
                                <Run Text="{Binding WorkCount}" />
                                <Run Text="/" />
                                <Run Text="{Binding WorkTotalCount}" />
                            </TextBlock>
                            -->
                            
                            <ProgressBar Minimum="0" Maximum="{Binding WorkTotalCount}"
                                     Value="{Binding WorkCount}"
                                     />


                        </StackPanel>
                        
                        <ProgressRing IsActive="{Binding NowWorking}" Margin="8" />

                    </StackPanel>
                                

                </Grid>
                
            </Grid>

        </ControlTemplate>
    </ContentControl.Template>
</ContentControl>
