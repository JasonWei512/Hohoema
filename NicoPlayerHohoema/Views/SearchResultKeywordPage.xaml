<Page
    x:Class="NicoPlayerHohoema.Views.SearchResultKeywordPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:view="using:NicoPlayerHohoema.Views"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:controls="using:NicoPlayerHohoema.Views.Controls"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <Grid>
        <VisualStateManager.VisualStateGroups>

            <!-- トップバー表示時のタイトル位置ずらし -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsForceTVModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleLayout.Margin" Value="64 0 0 0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="520" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitleLayout.Margin" Value="64 0 0 0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="TopBarStateGroup">


                <!-- マウス操作時、または画面が大きい時 -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="521" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NotSelectionModeCommandBar.IsOpen" Value="True" />
                        <Setter Target="SelectionModeCommandBar.IsOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>

                <!-- 狭い -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <VisualStateGroup x:Name="SelectionModeVisualStateGroup">

                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsSelectionModeEnable.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CacheRequestButton.Visibility" Value="Visible" />
                        <Setter Target="AddMylistButton.Visibility" Value="Visible" />

                        <Setter Target="RefreshListButton.Visibility" Value="Collapsed" />
                        <Setter Target="AddFeedButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <controls:ListingWithHeader 
            x:Name="ListingWithHeader"
            ItemsSource="{Binding IncrementalLoadingItems, Mode=OneWay}"
            SelectedItems="{Binding SelectedItems}"
            RefreshCommand="{Binding RefreshCommand}"
            ItemCommand="{StaticResource OpenContentCommand}"
            IsTVModeEnabled="{Binding IsForceTVModeEnable.Value}"
            IsSelectionEnabled="{Binding IsSelectionModeEnable.Value}"
            NowLoading="{Binding NowLoading.Value}"
            >
            <controls:ListingWithHeader.HeaderContent>
                <toolkit:DockPanel >

                    <CommandBar VerticalAlignment="Center"
                                    >
                        <CommandBar.PrimaryCommands>
                            <!-- 非選択中に -->
                            <AppBarButton x:Name="RefreshListButton"
                                    Command="{Binding RefreshCommand}"
                                              Label="更新"
                                              Icon="Refresh"
                                        />

                            <!-- 選択中に表示するアイテム -->
                            <AppBarButton x:Name="CacheRequestButton"
                                        Command="{Binding RequestCacheDownload}"
                                              IsEnabled="{Binding CanDownload, Converter={StaticResource BooleanToVisibility}}"
                                              Icon="Download"
                                              Label="キャッシュ"
                                          Visibility="Collapsed"
                                              
                                            />

                            <AppBarButton x:Name="AddMylistButton"
                                    Command="{Binding RegistratioMylistCommand}" 
                                          Icon="Add"
                                          Label="マイリストに追加"
                                          Visibility="Collapsed"
                                            />

                            <AppBarToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            Label="選択"
                                                    IsCompact="True"
                                            >
                                <iconPack:PackIconMaterial Kind="CheckboxMarkedOutline" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       />
                            </AppBarToggleButton>

                            
                        </CommandBar.PrimaryCommands>
                        <CommandBar.SecondaryCommands>

                            
                            <AppBarButton x:Name="AddFeedButton"
                                    Label="新着チェックに追加"
                                        Command="{StaticResource AddFeedSourceCommand}"
                                        CommandParameter="{Binding KeywordSearchBookmark}"
                                    />


                        </CommandBar.SecondaryCommands>

                        <CommandBar.Content>
                            <Border Background="Transparent" IsHitTestVisible="True"
                                        Margin="16 0 0 0"
                                    x:Name="TitleLayout"
                                >
                                <i:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:ChangePropertyAction TargetObject="{x:Bind ListingWithHeader}" PropertyName="ListPosition" Value="0.0" />
                                    </core:EventTriggerBehavior>
                                </i:Interaction.Behaviors>

                                <StackPanel>

                                    <TextBlock Text="{Binding Title}" 
                                            Style="{StaticResource SubtitleTextBlockStyle}"
                                       
                                    />
                                    <HyperlinkButton 
                                                   toolkit:DockPanel.Dock="Bottom"
                                            >
                                        <i:Interaction.Behaviors>
                                            <core:EventTriggerBehavior EventName="Click" >
                                                <mybehavior:OpenFlyout />
                                            </core:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>

                                        <TextBlock Text="{Binding SearchOptionText}" 
                                                       Style="{StaticResource CaptionTextBlockStyle}"
                                                       >
                                        </TextBlock>

                                        <FlyoutBase.AttachedFlyout>
                                            <Flyout>
                                                <StackPanel MaxWidth="300">

                                                    <ListView ItemsSource="{Binding VideoSearchOptionListItems}"
                                                          DisplayMemberPath="Label"
                                                          SelectedItem="{Binding SelectedSearchSort.Value, Mode=TwoWay}"
                                                          Margin="0"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Center"
                                                          SelectionMode="Single"
                                                          SingleSelectionFollowsFocus="False"
                                                        >
                                                        <ListView.ItemContainerStyle>
                                                            <Style TargetType="ListViewItem">
                                                                <Setter Property="Width" Value="140" />
                                                            </Style>
                                                        </ListView.ItemContainerStyle>
                                                        <ListView.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <ItemsWrapGrid Orientation="Horizontal" />
                                                            </ItemsPanelTemplate>
                                                        </ListView.ItemsPanel>

                                                    </ListView>

                                                </StackPanel>


                                            </Flyout>
                                        </FlyoutBase.AttachedFlyout>


                                    </HyperlinkButton>
                                    
                                </StackPanel>
                            </Border>
                        </CommandBar.Content>

                    </CommandBar>
                </toolkit:DockPanel>
            </controls:ListingWithHeader.HeaderContent>


            <controls:ListingWithHeader.ListItemTemplate>
                <DataTemplate>
                    <Grid>
                        <local:VideoInfoControl />
                    </Grid>
                </DataTemplate>
            </controls:ListingWithHeader.ListItemTemplate>

            <controls:ListingWithHeader.GridItemTemplate>
                <DataTemplate>
                    <controls:VideoInfoControl_TV />
                </DataTemplate>
            </controls:ListingWithHeader.GridItemTemplate>
        </controls:ListingWithHeader>
    </Grid>
</Page>
