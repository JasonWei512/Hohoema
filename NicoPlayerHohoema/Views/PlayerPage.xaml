<Page
    x:Class="NicoPlayerHohoema.Views.PlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:comment="using:NicoPlayerHohoema.Views.CommentRenderer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:toolkitext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d"
    d:DesignHeight="800"
    d:DesignWidth="800"
    >

    <Page.Resources>
        
        
    </Page.Resources>


    

    <toolkit:DockPanel>
        
        <VisualStateManager.VisualStateGroups>

            <!-- responsive MediaInfo  -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding HideMediaInfo.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LandscapeMediaInfo.Visibility" Value="Collapsed" />
                        <Setter Target="PortraitMediaInfo.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LandscapeMediaInfo.Visibility" Value="Visible" />
                        <Setter Target="PortraitMediaInfo.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LandscapeMediaInfo.Visibility" Value="Collapsed" />
                        <Setter Target="PortraitMediaInfo.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>

            <!-- 再生・一時停止ボタン -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayButton.Visibility" Value="Collapsed" />
                        <Setter Target="PauseButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding NowPlaying.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayButton.Visibility" Value="Visible" />
                        <Setter Target="PauseButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            
            <!-- リピートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsEnableRepeat.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RepeatButton.Icon" Value="RepeatAll" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsEnableRepeat.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RepeatButton.Icon" Value="RepeatOne" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>


            <!-- ミュートの有効・無効 -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteButton.Icon" Value="Mute" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding IsMuted.Value, Converter={StaticResource InvertBoolean}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MuteButton.Icon" Value="Volume" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <!-- Landscape Media Info -->
        <StackPanel x:Name="LandscapeMediaInfo"
                    toolkit:DockPanel.Dock="Right"
                    MinWidth="320"
                    toolkitext:FrameworkElementExtensions.Cursor="{Binding Converter={StaticResource ToCoreCursor}}"
                    >
            
            <local:MediaInfoContent />

        </StackPanel>
        <!-- Portrait Media Info -->
        <StackPanel x:Name="PortraitMediaInfo"
                    toolkit:DockPanel.Dock="Bottom"
                    MinHeight="400"
                    toolkitext:FrameworkElementExtensions.Cursor="{Binding Converter={StaticResource ToCoreCursor}}"
                    >
            <local:MediaInfoContent />

        </StackPanel>



        <!-- Media Control -->
        <Grid Background="Black" x:Name="MediaControl">


            <MediaElement x:Name="mediaElem"
                          local:MediaElementExtention.CustomStream="{Binding VideoStream.Value}"
                          Position="{Binding CurrentVideoPosition.Value}"
                          AudioCategory="BackgroundCapableMedia"
                          IsMuted="{Binding IsMuted.Value}"
                          IsLooping="{Binding IsEnableRepeat.Value}"
                          Volume="{Binding SoundVolume.Value}"
                          
                      >
                <i:Interaction.Behaviors>


                    <!-- 動画の再生位置を取り出す -->
                    <mybehavior:MediaElementExtractPositionBehavior 
                        Position="{Binding ReadVideoPosition.Value, Mode=TwoWay}"
                        Interval="00:00:00.032" 
                        />

                    <!-- シーク操作後、自動で再生する -->
                    <mybehavior:MediaElementSeekAfterAutoPlayBehavior />

                    <!-- MediaElementのバッファリング/再生の状態を読み取る -->
                    <mybehavior:MediaElementStateGetter State="{Binding CurrentState.Value, Mode=TwoWay}" />

                </i:Interaction.Behaviors>
            </MediaElement>


            <comment:CommentRenderer Comments="{Binding Comments}"
                                     VideoPosition="{Binding ReadVideoPosition.Value}"                                     
                                     Visibility="{Binding IsVisibleComment.Value, Converter={StaticResource BooleanToVisibility}}"
                                     />


            <toolkit:DockPanel HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                               x:Name="ControlUIRoot"
                           >
                <i:Interaction.Behaviors>
                    <mybehavior:AutoHide x:Name="AutoHideBehavior"
                                         IsEnable="{Binding IsAutoHideEnable.Value}"
                                         Delay="00:00:05" 
                                         WithCursor="True"
                                         >
                        <i:Interaction.Behaviors>
                           
                            
                            <core:EventTriggerBehavior SourceObject="{Binding ElementName=MediaControl}" EventName="Tapped">
                                <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior SourceObject="{Binding ElementName=MediaControl}" EventName="PointerMoved">
                                <core:CallMethodAction TargetObject="{Binding ElementName=AutoHideBehavior}" MethodName="PreventAutoHide" />
                            </core:EventTriggerBehavior>

                        </i:Interaction.Behaviors>
                    </mybehavior:AutoHide>
                </i:Interaction.Behaviors>


                <!-- Top Media Control -->
                <toolkit:DockPanel toolkit:DockPanel.Dock="Top"
                                   Background="#AA777777"
                                   >
                    <StackPanel toolkit:DockPanel.Dock="Left">
                    </StackPanel>
                    
                    <StackPanel toolkit:DockPanel.Dock="Right">
                        <AppBarToggleButton IsChecked="{Binding IsVisibleComment.Value, Mode=TwoWay}" 
                                            Icon="Comment" 
                                            />
                    </StackPanel>

                    <Border />

                </toolkit:DockPanel>

                <!-- Bottom Media Control -->
                <toolkit:DockPanel toolkit:DockPanel.Dock="Bottom"
                               Background="#AA777777"
                               >

                    <!-- -->
                    <Grid 
                            x:Name="ControlPanel_Center"
                            Margin="0 0"
                            toolkit:DockPanel.Dock="Top"
                             >

                        <Slider Minimum="0.0" 
                            Maximum="{Binding VideoLength.Value}"
                            Value="{Binding SliderVideoPosition.Value, Mode=TwoWay}"
                            Width="{Binding ElementName=ControlPanel_Center, Path=ActualWidth, Mode=OneWay}"
                            IsThumbToolTipEnabled="True"
                            ThumbToolTipValueConverter="{StaticResource TimeToMovieLengthConverter}"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalAlignment="Center"
                            >
                        </Slider>

                        <TextBlock HorizontalAlignment="Right"
                               VerticalAlignment="Top"
                               IsHitTestVisible="False"
                               Foreground="Gray"
                               >
                            <Run Text="{Binding SliderVideoPosition.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                            <Run Text="/" />
                            <Run Text="{Binding VideoLength.Value, Converter={StaticResource TimeToMovieLengthConverter}}" />
                        </TextBlock>
                    </Grid>


                    <!-- Left Items -->
                    <StackPanel 
                        Orientation="Horizontal">

                        <AppBarButton 
                                x:Name="PlayButton"
                                Icon="Play"
                                  >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:CallMethodAction TargetObject="{Binding ElementName=mediaElem}"
                                                       MethodName="Play"
                                                       />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AppBarButton>
                        <AppBarButton 
                            x:Name="PauseButton"
                            Icon="Pause"
                            Visibility="Collapsed"
                                  >
                            <i:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:CallMethodAction TargetObject="{Binding ElementName=mediaElem}"
                                                       MethodName="Pause"
                                                       />
                                </core:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AppBarButton>

                        <AppBarButton x:Name="RepeatButton"
                                      Icon="RepeatAll" 
                                      Command="{Binding ToggleRepeatCommand}"                                      
                                      />
                    </StackPanel>

                    <!-- Right Items-->
                    <StackPanel
                        toolkit:DockPanel.Dock="Right"
                        Orientation="Horizontal"
                        >
                        <AppBarButton x:Name="MuteButton"
                                      Icon="Mute" 
                                      Command="{Binding ToggleMuteCommand}"                                      
                                      />

                        <Slider x:Name="VolumeSlider"
                            Width="200"
                            VerticalAlignment="Center"
                            Margin="32 0"                            
                            Value="{Binding SoundVolume.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsThumbToolTipEnabled="True"
                            ThumbToolTipValueConverter="{StaticResource ToUserFriendlySoubleVolume}"
                            Maximum="1.0"
                            Minimum="0.0"
                            StepFrequency="0.01"
                            />

                    </StackPanel>


                    <!-- Center Items -->
                    <StackPanel 
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        
                    >
                        <!-- Comment -->
                        <AppBarButton Icon="Comment" 
                                      />

                    </StackPanel>



                </toolkit:DockPanel>

                

                <Border />


            </toolkit:DockPanel>
        </Grid>
    </toolkit:DockPanel>
    
    
</Page>
