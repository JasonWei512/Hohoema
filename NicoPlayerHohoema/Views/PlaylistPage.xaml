<Page
    x:Class="NicoPlayerHohoema.Views.PlaylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NicoPlayerHohoema.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:listitem="using:NicoPlayerHohoema.Views.HohoemaListItem"
    xmlns:toolkit="using:WinRTXamlToolkit.Controls"
    xmlns:ext="using:WinRTXamlToolkit.Controls.Extensions"
    xmlns:uwptoolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:mycontrols="using:NicoPlayerHohoema.Views.Controls"
    xmlns:mybehavior="using:NicoPlayerHohoema.Views.Behaviors"
    xmlns:mvvm="using:Prism.Windows.Mvvm"
    xmlns:iconPack="using:MahApps.Metro.IconPacks"
    xmlns:hardTrigger="using:AdaptiveTriggerLibrary.Triggers.HardwareInterfaceTriggers"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">

    <Page.Resources>
        <Flyout x:Key="PlaylistRenameFlyout" x:Name="PlaylistRenameFlyout">
            <StackPanel Orientation="Horizontal">
                <TextBox Text="{Binding PlaylistNameCandidate.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         ext:TextBoxFocusExtensions.AutoSelectOnFocus="True"
                         MinWidth="200"
                                                                 >
                    <i:Interaction.Behaviors>
                        <mybehavior:KeyboardTrigger Key="Enter">
                            <mybehavior:KeyboardTrigger.Actions>
                                <core:InvokeCommandAction Command="{Binding RenamePlaylistCommand}" />
                                <core:CallMethodAction TargetObject="{Binding ElementName=PlaylistRenameFlyout}" MethodName="Hide" />
                            </mybehavior:KeyboardTrigger.Actions>
                        </mybehavior:KeyboardTrigger>
                    </i:Interaction.Behaviors>
                </TextBox>
                <Border Width="8" />
                <Button Command="{Binding RenamePlaylistCommand}" 
                        Content="名前を変更">
                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:CallMethodAction TargetObject="{Binding ElementName=PlaylistRenameFlyout}" MethodName="Hide" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Button>
            </StackPanel>
        </Flyout>
    </Page.Resources>
    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <hardTrigger:DeviceFamilyTrigger Condition="Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ContentLayout.Margin" Value="0 27 0 27" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <toolkit:DockPanel x:Name="ContentLayout">


            


            <Pivot ItemsSource="{Binding Playlists}"
                   SelectedItem="{Binding SelectedItem.Value, Mode=TwoWay}"
                   >

                <Pivot.RightHeaderTemplate>
                    <DataTemplate>
                        
                        <UserControl>
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState>
                                            <VisualState.StateTriggers>
                                                <hardTrigger:DeviceFamilyTrigger Condition="Xbox" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="PlaylistAddButton.Margin" Value="0 0 48 0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                
                                <AppBarButton Icon="Add"
                                                Command="{Binding ElementName=ContentLayout, Path=DataContext.CreatePlaylistCommand}"
                                                Background="Transparent" 
                                              x:Name="PlaylistAddButton"
                                                  />


                            </Grid>
                        </UserControl>
                        
                    </DataTemplate>
                </Pivot.RightHeaderTemplate>
                <Pivot.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal"
                                    >

                            <TextBlock Text="{Binding PlaylistName.Value}"
                                       />

                        </StackPanel>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                
                <Pivot.ItemTemplate>

                    <DataTemplate>
                        <UserControl>
                            <toolkit:DockPanel>

                                <VisualStateManager.VisualStateGroups>

                                    <VisualStateGroup>
                                        <VisualState>
                                            <VisualState.StateTriggers>
                                                <StateTrigger IsActive="{Binding IsForceTVModeEnable.Value}" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="VerticalVideoList.Visibility" Value="Collapsed" />
                                                <Setter Target="HorizontalVideoList.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup>
                                        <VisualState>
                                            <VisualState.StateTriggers>
                                                <hardTrigger:DeviceFamilyTrigger Condition="Xbox" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="PivotItemHeader.Margin" Value="0 0 48 0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    
                                </VisualStateManager.VisualStateGroups>

                                <Border toolkit:DockPanel.Dock="Top" 
                                    Height="64"
                                    x:Name="PivotItemHeader"
                                    >
                                    <toolkit:DockPanel>
                                        <StackPanel Orientation="Horizontal" 
                                                toolkit:DockPanel.Dock="Right"
                                                >

                                            <StackPanel Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibilityInverted}}"
                                            Orientation="Horizontal"
                                            >




                                            </StackPanel>

                                            <StackPanel Visibility="{Binding IsSelectionModeEnable.Value, Converter={StaticResource BooleanToVisibility}}"
                                            Orientation="Horizontal"
                                            >

                                                <AppBarButton Icon="Play" Label="再生" Command="{Binding PlayAllCommand}" />


                                                <AppBarButton Command="{Binding RegistratioMylistCommand}"
                                              Label="マイリスト登録"
                                              Icon="Add"
                                            >
                                                </AppBarButton>


                                                <AppBarButton Command="{Binding RequestCacheDownload}"
                                              Label="キャッシュ取得"
                                              Icon="Download"
                                            >
                                                </AppBarButton>

                                                <AppBarButton Command="{Binding RemovePlaylistItemsCommand}"
                                              Icon="Remove"
                                              Label="プレイリストから削除"
                                            />

                                            </StackPanel>



                                            <AppBarToggleButton IsChecked="{Binding IsSelectionModeEnable.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            IsEnabled="{Binding HasItem.Value}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            Label="選択"
                                            >
                                                <iconPack:PackIconMaterial Kind="CheckboxMarkedOutline" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       />
                                            </AppBarToggleButton>


                                        </StackPanel>


                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding PlaylistName.Value}" 
                                                   VerticalAlignment="Center"
                                                   Style="{StaticResource SubtitleTextBlockStyle}"
                                                    >
                                            </TextBlock>

                                            <Button Background="Transparent"
                                                Margin="8 0 0 0"
                                                Visibility="{Binding IsDefaultPlaylist, Converter={StaticResource BooleanToVisibilityInverted}}"
                                                >

                                                <SymbolIcon Symbol="More" />

                                                <Button.Flyout>
                                                    <MenuFlyout>
                                                        <MenuFlyoutItem Text="名前を変更"
                                                                        Command="{Binding RenamePlaylistCommand}"
                                                                        >

                                                        </MenuFlyoutItem>

                                                        <MenuFlyoutItem Text="プレイリストを削除"
                                                                        Command="{Binding DeletePlaylistCommand}"
                                                                        >

                                                        </MenuFlyoutItem>
                                                    </MenuFlyout>
                                                </Button.Flyout>

                                                
                                            </Button>


                                            <i:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Tapped">
                                                    <core:ChangePropertyAction TargetObject="{Binding ListViewVerticalOffset}" PropertyName="Value" Value="0.0" />
                                                </core:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>

                                        </StackPanel>
                                    </toolkit:DockPanel>

                                </Border>


                                <Grid>

                                    
                                    <mycontrols:HohoemaIncrementalLoadingList
                                            ItemFlyout="{StaticResource VideoListItemFlyout}"
                                            x:Name="VerticalVideoList"
                                            >
                                        <mycontrols:HohoemaIncrementalLoadingList.ItemTemplate>
                                            <DataTemplate >
                                                <Grid>

                                                    <local:VideoInfoControl />

                                                </Grid>
                                            </DataTemplate>
                                        </mycontrols:HohoemaIncrementalLoadingList.ItemTemplate>
                                    </mycontrols:HohoemaIncrementalLoadingList>

                                    <mycontrols:IncrementalLoadingList
                                            x:Name="HorizontalVideoList"
                                            ItemsSource="{Binding IncrementalLoadingItems}"
                                            SelectedItems="{Binding SelectedItems}"
                                            ItemContextFlyout="{StaticResource VideoListItemFlyout}"
                                            ItemCommand="{Binding SelectItemCommand}"
                                            IsSelectionEnabled="{Binding IsSelectionModeEnable.Value}"
                                            Visibility="Collapsed"
                                        IsTabStop="False"
                                            >

                                        <mycontrols:IncrementalLoadingList.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsWrapGrid Orientation="Vertical" Height="480"
                                                       Margin="0 0 48 0"
                                                       />
                                            </ItemsPanelTemplate>

                                        </mycontrols:IncrementalLoadingList.ItemsPanel>

                                        <mycontrols:IncrementalLoadingList.ItemTemplate>

                                            <DataTemplate>
                                                <listitem:HohoemaListItemMiniCard />
                                            </DataTemplate>

                                        </mycontrols:IncrementalLoadingList.ItemTemplate>

                                    </mycontrols:IncrementalLoadingList>
                                </Grid>


                            </toolkit:DockPanel>
                        </UserControl>
                        
                    </DataTemplate>





                </Pivot.ItemTemplate>
        
        </Pivot>


        </toolkit:DockPanel>
    </Grid>
</Page>
